# File produced by Kranc

STORAGE: ML_log_confac[timelevels]

STORAGE: ML_metric[timelevels]

STORAGE: ML_Gamma[timelevels]

STORAGE: ML_trace_curv[timelevels]

STORAGE: ML_curv[timelevels]

STORAGE: ML_lapse[timelevels]

STORAGE: ML_dtlapse[timelevels]

STORAGE: ML_shift[timelevels]

STORAGE: ML_dtshift[timelevels]

STORAGE: ML_Ham[other_timelevels]

STORAGE: ML_mom[other_timelevels]

STORAGE: ML_cons_detg[other_timelevels]

STORAGE: ML_cons_Gamma[other_timelevels]

STORAGE: ML_cons_traceA[other_timelevels]

STORAGE: ML_curvrhs[rhs_timelevels]

STORAGE: ML_dtlapserhs[rhs_timelevels]

STORAGE: ML_dtshiftrhs[rhs_timelevels]

STORAGE: ML_Gammarhs[rhs_timelevels]

STORAGE: ML_lapserhs[rhs_timelevels]

STORAGE: ML_log_confacrhs[rhs_timelevels]

STORAGE: ML_metricrhs[rhs_timelevels]

STORAGE: ML_shiftrhs[rhs_timelevels]

STORAGE: ML_trace_curvrhs[rhs_timelevels]
schedule ML_BSSN_CaKernel_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule ML_BSSN_CaKernel_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

if (CCTK_EQUALS(my_initial_data, "ADMBase"))
{
  schedule CAKERNEL_Launch_ML_BSSN_CaKernel_convertFromADMBase as ML_BSSN_CaKernel_convertFromADMBase AT initial AFTER ADMBase_PostInitial
  {
    LANG: C
    TAGS: Device=1
    READS: ADMBase::kxx(Everywhere)
    READS: ADMBase::kxy(Everywhere)
    READS: ADMBase::kxz(Everywhere)
    READS: ADMBase::kyy(Everywhere)
    READS: ADMBase::kyz(Everywhere)
    READS: ADMBase::kzz(Everywhere)
    READS: ADMBase::alp(Everywhere)
    READS: ADMBase::gxx(Everywhere)
    READS: ADMBase::gxy(Everywhere)
    READS: ADMBase::gxz(Everywhere)
    READS: ADMBase::gyy(Everywhere)
    READS: ADMBase::gyz(Everywhere)
    READS: ADMBase::gzz(Everywhere)
    READS: ADMBase::betax(Everywhere)
    READS: ADMBase::betay(Everywhere)
    READS: ADMBase::betaz(Everywhere)
    WRITES: ML_BSSN_CaKernel::alpha(Everywhere)
    WRITES: ML_BSSN_CaKernel::At11(Everywhere)
    WRITES: ML_BSSN_CaKernel::At12(Everywhere)
    WRITES: ML_BSSN_CaKernel::At13(Everywhere)
    WRITES: ML_BSSN_CaKernel::At22(Everywhere)
    WRITES: ML_BSSN_CaKernel::At23(Everywhere)
    WRITES: ML_BSSN_CaKernel::At33(Everywhere)
    WRITES: ML_BSSN_CaKernel::beta1(Everywhere)
    WRITES: ML_BSSN_CaKernel::beta2(Everywhere)
    WRITES: ML_BSSN_CaKernel::beta3(Everywhere)
    WRITES: ML_BSSN_CaKernel::gt11(Everywhere)
    WRITES: ML_BSSN_CaKernel::gt12(Everywhere)
    WRITES: ML_BSSN_CaKernel::gt13(Everywhere)
    WRITES: ML_BSSN_CaKernel::gt22(Everywhere)
    WRITES: ML_BSSN_CaKernel::gt23(Everywhere)
    WRITES: ML_BSSN_CaKernel::gt33(Everywhere)
    WRITES: ML_BSSN_CaKernel::phi(Everywhere)
    WRITES: ML_BSSN_CaKernel::trK(Everywhere)
  } "ML_BSSN_CaKernel_convertFromADMBase"
}

schedule CAKERNEL_Launch_ML_BSSN_CaKernel_RHS1 as ML_BSSN_CaKernel_RHS1 IN ML_BSSN_CaKernel_evolCalcGroup
{
  LANG: C
  TAGS: Device=1
  READS: grid::r(Everywhere)
  READS: TmunuBase::eTtt(Everywhere)
  READS: TmunuBase::eTxx(Everywhere)
  READS: TmunuBase::eTxy(Everywhere)
  READS: TmunuBase::eTxz(Everywhere)
  READS: TmunuBase::eTyy(Everywhere)
  READS: TmunuBase::eTyz(Everywhere)
  READS: TmunuBase::eTzz(Everywhere)
  READS: TmunuBase::eTtx(Everywhere)
  READS: TmunuBase::eTty(Everywhere)
  READS: TmunuBase::eTtz(Everywhere)
  READS: ML_BSSN_CaKernel::At11(Everywhere)
  READS: ML_BSSN_CaKernel::At12(Everywhere)
  READS: ML_BSSN_CaKernel::At13(Everywhere)
  READS: ML_BSSN_CaKernel::At22(Everywhere)
  READS: ML_BSSN_CaKernel::At23(Everywhere)
  READS: ML_BSSN_CaKernel::At33(Everywhere)
  READS: ML_BSSN_CaKernel::A(Everywhere)
  READS: ML_BSSN_CaKernel::B1(Everywhere)
  READS: ML_BSSN_CaKernel::B2(Everywhere)
  READS: ML_BSSN_CaKernel::B3(Everywhere)
  READS: ML_BSSN_CaKernel::Xt1(Everywhere)
  READS: ML_BSSN_CaKernel::Xt2(Everywhere)
  READS: ML_BSSN_CaKernel::Xt3(Everywhere)
  READS: ML_BSSN_CaKernel::alpha(Everywhere)
  READS: ML_BSSN_CaKernel::phi(Everywhere)
  READS: ML_BSSN_CaKernel::gt11(Everywhere)
  READS: ML_BSSN_CaKernel::gt12(Everywhere)
  READS: ML_BSSN_CaKernel::gt13(Everywhere)
  READS: ML_BSSN_CaKernel::gt22(Everywhere)
  READS: ML_BSSN_CaKernel::gt23(Everywhere)
  READS: ML_BSSN_CaKernel::gt33(Everywhere)
  READS: ML_BSSN_CaKernel::beta1(Everywhere)
  READS: ML_BSSN_CaKernel::beta2(Everywhere)
  READS: ML_BSSN_CaKernel::beta3(Everywhere)
  READS: ML_BSSN_CaKernel::trK(Everywhere)
  WRITES: ML_BSSN_CaKernel::alpharhs(Interior)
  WRITES: ML_BSSN_CaKernel::Arhs(Interior)
  WRITES: ML_BSSN_CaKernel::B1rhs(Interior)
  WRITES: ML_BSSN_CaKernel::B2rhs(Interior)
  WRITES: ML_BSSN_CaKernel::B3rhs(Interior)
  WRITES: ML_BSSN_CaKernel::beta1rhs(Interior)
  WRITES: ML_BSSN_CaKernel::beta2rhs(Interior)
  WRITES: ML_BSSN_CaKernel::beta3rhs(Interior)
  WRITES: ML_BSSN_CaKernel::gt11rhs(Interior)
  WRITES: ML_BSSN_CaKernel::gt12rhs(Interior)
  WRITES: ML_BSSN_CaKernel::gt13rhs(Interior)
  WRITES: ML_BSSN_CaKernel::gt22rhs(Interior)
  WRITES: ML_BSSN_CaKernel::gt23rhs(Interior)
  WRITES: ML_BSSN_CaKernel::gt33rhs(Interior)
  WRITES: ML_BSSN_CaKernel::phirhs(Interior)
  WRITES: ML_BSSN_CaKernel::trKrhs(Interior)
  WRITES: ML_BSSN_CaKernel::Xt1rhs(Interior)
  WRITES: ML_BSSN_CaKernel::Xt2rhs(Interior)
  WRITES: ML_BSSN_CaKernel::Xt3rhs(Interior)
} "ML_BSSN_CaKernel_RHS1"

schedule CAKERNEL_Launch_ML_BSSN_CaKernel_RHS2 as ML_BSSN_CaKernel_RHS2 IN ML_BSSN_CaKernel_evolCalcGroup
{
  LANG: C
  TAGS: Device=1
  READS: grid::r(Everywhere)
  READS: TmunuBase::eTtt(Everywhere)
  READS: TmunuBase::eTxx(Everywhere)
  READS: TmunuBase::eTxy(Everywhere)
  READS: TmunuBase::eTxz(Everywhere)
  READS: TmunuBase::eTyy(Everywhere)
  READS: TmunuBase::eTyz(Everywhere)
  READS: TmunuBase::eTzz(Everywhere)
  READS: TmunuBase::eTtx(Everywhere)
  READS: TmunuBase::eTty(Everywhere)
  READS: TmunuBase::eTtz(Everywhere)
  READS: ML_BSSN_CaKernel::At11(Everywhere)
  READS: ML_BSSN_CaKernel::At12(Everywhere)
  READS: ML_BSSN_CaKernel::At13(Everywhere)
  READS: ML_BSSN_CaKernel::At22(Everywhere)
  READS: ML_BSSN_CaKernel::At23(Everywhere)
  READS: ML_BSSN_CaKernel::At33(Everywhere)
  READS: ML_BSSN_CaKernel::Xt1(Everywhere)
  READS: ML_BSSN_CaKernel::Xt2(Everywhere)
  READS: ML_BSSN_CaKernel::Xt3(Everywhere)
  READS: ML_BSSN_CaKernel::alpha(Everywhere)
  READS: ML_BSSN_CaKernel::phi(Everywhere)
  READS: ML_BSSN_CaKernel::gt11(Everywhere)
  READS: ML_BSSN_CaKernel::gt12(Everywhere)
  READS: ML_BSSN_CaKernel::gt13(Everywhere)
  READS: ML_BSSN_CaKernel::gt22(Everywhere)
  READS: ML_BSSN_CaKernel::gt23(Everywhere)
  READS: ML_BSSN_CaKernel::gt33(Everywhere)
  READS: ML_BSSN_CaKernel::beta1(Everywhere)
  READS: ML_BSSN_CaKernel::beta2(Everywhere)
  READS: ML_BSSN_CaKernel::beta3(Everywhere)
  READS: ML_BSSN_CaKernel::trK(Everywhere)
  WRITES: ML_BSSN_CaKernel::At11rhs(Interior)
  WRITES: ML_BSSN_CaKernel::At12rhs(Interior)
  WRITES: ML_BSSN_CaKernel::At13rhs(Interior)
  WRITES: ML_BSSN_CaKernel::At22rhs(Interior)
  WRITES: ML_BSSN_CaKernel::At23rhs(Interior)
  WRITES: ML_BSSN_CaKernel::At33rhs(Interior)
} "ML_BSSN_CaKernel_RHS2"

if (CCTK_EQUALS(my_rhs_boundary_condition, "static"))
{
  schedule CAKERNEL_Launch_ML_BSSN_CaKernel_RHSStaticBoundary as ML_BSSN_CaKernel_RHSStaticBoundary IN MoL_CalcRHS
  {
    LANG: C
    TAGS: Device=1
    WRITES: ML_BSSN_CaKernel::alpharhs(Boundary)
    WRITES: ML_BSSN_CaKernel::Arhs(Boundary)
    WRITES: ML_BSSN_CaKernel::At11rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::At12rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::At13rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::At22rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::At23rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::At33rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::B1rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::B2rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::B3rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::beta1rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::beta2rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::beta3rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::gt11rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::gt12rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::gt13rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::gt22rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::gt23rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::gt33rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::phirhs(Boundary)
    WRITES: ML_BSSN_CaKernel::trKrhs(Boundary)
    WRITES: ML_BSSN_CaKernel::Xt1rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::Xt2rhs(Boundary)
    WRITES: ML_BSSN_CaKernel::Xt3rhs(Boundary)
  } "ML_BSSN_CaKernel_RHSStaticBoundary"
}

schedule CAKERNEL_Launch_ML_BSSN_CaKernel_enforce as ML_BSSN_CaKernel_enforce IN MoL_PostStepModify
{
  LANG: C
  TAGS: Device=1
  READS: ML_BSSN_CaKernel::At11(Everywhere)
  READS: ML_BSSN_CaKernel::At12(Everywhere)
  READS: ML_BSSN_CaKernel::At13(Everywhere)
  READS: ML_BSSN_CaKernel::At22(Everywhere)
  READS: ML_BSSN_CaKernel::At23(Everywhere)
  READS: ML_BSSN_CaKernel::At33(Everywhere)
  READS: ML_BSSN_CaKernel::alpha(Everywhere)
  READS: ML_BSSN_CaKernel::gt11(Everywhere)
  READS: ML_BSSN_CaKernel::gt12(Everywhere)
  READS: ML_BSSN_CaKernel::gt13(Everywhere)
  READS: ML_BSSN_CaKernel::gt22(Everywhere)
  READS: ML_BSSN_CaKernel::gt23(Everywhere)
  READS: ML_BSSN_CaKernel::gt33(Everywhere)
  WRITES: ML_BSSN_CaKernel::alpha(Everywhere)
  WRITES: ML_BSSN_CaKernel::At11(Everywhere)
  WRITES: ML_BSSN_CaKernel::At12(Everywhere)
  WRITES: ML_BSSN_CaKernel::At13(Everywhere)
  WRITES: ML_BSSN_CaKernel::At22(Everywhere)
  WRITES: ML_BSSN_CaKernel::At23(Everywhere)
  WRITES: ML_BSSN_CaKernel::At33(Everywhere)
} "ML_BSSN_CaKernel_enforce"

if (CCTK_EQUALS(my_boundary_condition, "Minkowski"))
{
  schedule CAKERNEL_Launch_ML_BSSN_CaKernel_boundary as ML_BSSN_CaKernel_boundary IN MoL_PostStep
  {
    LANG: C
    TAGS: Device=1
    WRITES: ML_BSSN_CaKernel::A(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::alpha(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::At11(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::At12(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::At13(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::At22(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::At23(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::At33(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::B1(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::B2(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::B3(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::beta1(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::beta2(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::beta3(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::gt11(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::gt12(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::gt13(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::gt22(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::gt23(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::gt33(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::phi(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::trK(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::Xt1(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::Xt2(ERROR(BoundaryWithGhosts))
    WRITES: ML_BSSN_CaKernel::Xt3(ERROR(BoundaryWithGhosts))
  } "ML_BSSN_CaKernel_boundary"
}

schedule group ML_BSSN_CaKernel_constraints1_group in MoL_PseudoEvolution after MoL_PostStep
{
} "ML_BSSN_CaKernel_constraints1"

schedule ML_BSSN_CaKernel_constraints1 in ML_BSSN_CaKernel_constraints1_group
{
  LANG: C
  TAGS: Device=1
  READS: TmunuBase::eTtt(Everywhere)
  READS: TmunuBase::eTxx(Everywhere)
  READS: TmunuBase::eTxy(Everywhere)
  READS: TmunuBase::eTxz(Everywhere)
  READS: TmunuBase::eTyy(Everywhere)
  READS: TmunuBase::eTyz(Everywhere)
  READS: TmunuBase::eTzz(Everywhere)
  READS: TmunuBase::eTtx(Everywhere)
  READS: TmunuBase::eTty(Everywhere)
  READS: TmunuBase::eTtz(Everywhere)
  READS: ML_BSSN_CaKernel::At11(Everywhere)
  READS: ML_BSSN_CaKernel::At12(Everywhere)
  READS: ML_BSSN_CaKernel::At13(Everywhere)
  READS: ML_BSSN_CaKernel::At22(Everywhere)
  READS: ML_BSSN_CaKernel::At23(Everywhere)
  READS: ML_BSSN_CaKernel::At33(Everywhere)
  READS: ML_BSSN_CaKernel::Xt1(Everywhere)
  READS: ML_BSSN_CaKernel::Xt2(Everywhere)
  READS: ML_BSSN_CaKernel::Xt3(Everywhere)
  READS: ML_BSSN_CaKernel::alpha(Everywhere)
  READS: ML_BSSN_CaKernel::phi(Everywhere)
  READS: ML_BSSN_CaKernel::gt11(Everywhere)
  READS: ML_BSSN_CaKernel::gt12(Everywhere)
  READS: ML_BSSN_CaKernel::gt13(Everywhere)
  READS: ML_BSSN_CaKernel::gt22(Everywhere)
  READS: ML_BSSN_CaKernel::gt23(Everywhere)
  READS: ML_BSSN_CaKernel::gt33(Everywhere)
  READS: ML_BSSN_CaKernel::beta1(Everywhere)
  READS: ML_BSSN_CaKernel::beta2(Everywhere)
  READS: ML_BSSN_CaKernel::beta3(Everywhere)
  READS: ML_BSSN_CaKernel::trK(Everywhere)
  WRITES: ML_BSSN_CaKernel::H(Interior)
} "ML_BSSN_CaKernel_constraints1"

schedule ML_BSSN_CaKernel_constraints1_SelectBCs in ML_BSSN_CaKernel_constraints1_bc_group
{
  LANG: C
  OPTIONS: level
  SYNC: ML_Ham
} "ML_BSSN_CaKernel_constraints1_SelectBCs"

schedule group ApplyBCs as ML_BSSN_CaKernel_constraints1_ApplyBCs in ML_BSSN_CaKernel_constraints1_bc_group after ML_BSSN_CaKernel_constraints1_SelectBCs
{
} "Apply BCs for groups set in ML_BSSN_CaKernel_constraints1"

schedule group ML_BSSN_CaKernel_constraints1_bc_group in ML_BSSN_CaKernel_constraints1_group after ML_BSSN_CaKernel_constraints1
{
} "ML_BSSN_CaKernel_constraints1"

schedule group ML_BSSN_CaKernel_constraints1_bc_group in MoL_PseudoEvolutionBoundaries after MoL_PostStep
{
} "ML_BSSN_CaKernel_constraints1"

schedule ML_BSSN_CaKernel_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: ML_log_confac
  SYNC: ML_metric
  SYNC: ML_Gamma
  SYNC: ML_trace_curv
  SYNC: ML_curv
  SYNC: ML_lapse
  SYNC: ML_dtlapse
  SYNC: ML_shift
  SYNC: ML_dtshift
} "select boundary conditions"

schedule ML_BSSN_CaKernel_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule ML_BSSN_CaKernel_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule ML_BSSN_CaKernel_Init in CCTK_BASEGRID after Accelerator_SetDevice
{
  LANG: C
  OPTIONS: local
} "Initialize CUDA Device"
schedule group ApplyBCs as ML_BSSN_CaKernel_ApplyBCs in MoL_PostStep after ML_BSSN_CaKernel_SelectBoundConds
{
} "Apply boundary conditions controlled by thorn Boundary"
