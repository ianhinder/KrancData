# File produced by Kranc

STORAGE: evolved_group[timelevels]

STORAGE: evolved_grouprhs[rhs_timelevels]
schedule TestSimpleWaveCaKernel_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule TestSimpleWaveCaKernel_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

schedule CAKERNEL_Launch_TestSimpleWaveCaKernel_InitialSine as TestSimpleWaveCaKernel_InitialSine AT initial
{
  LANG: C
  TAGS: Device=1
  READS: grid::x(Everywhere)
  WRITES: TestSimpleWaveCaKernel::phi(Everywhere)
  WRITES: TestSimpleWaveCaKernel::pi(Everywhere)
} "TestSimpleWaveCaKernel_InitialSine"

schedule CAKERNEL_Launch_TestSimpleWaveCaKernel_CalcRHS as TestSimpleWaveCaKernel_CalcRHS IN MoL_CalcRHS
{
  LANG: C
  TAGS: Device=1
  READS: TestSimpleWaveCaKernel::phi(Everywhere)
  READS: TestSimpleWaveCaKernel::pi(Everywhere)
  WRITES: TestSimpleWaveCaKernel::phirhs(Interior)
  WRITES: TestSimpleWaveCaKernel::pirhs(Interior)
} "TestSimpleWaveCaKernel_CalcRHS"

schedule TestSimpleWaveCaKernel_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: evolved_group
} "select boundary conditions"

schedule TestSimpleWaveCaKernel_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule TestSimpleWaveCaKernel_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule TestSimpleWaveCaKernel_Init in CCTK_BASEGRID after Accelerator_SetDevice
{
  LANG: C
  OPTIONS: local
} "Initialize CUDA Device"
schedule group ApplyBCs as TestSimpleWaveCaKernel_ApplyBCs in MoL_PostStep after TestSimpleWaveCaKernel_SelectBoundConds
{
} "Apply boundary conditions controlled by thorn Boundary"
