#undef KRANC_DIFF_FUNCTIONS
#define KRANC_C
#include "Differencing.h"
#include "Kranc.hh"

#undef KRANC_GFOFFSET3D
#define KRANC_GFOFFSET3D(u,i,j,k) I3D(u,i,j,k)

/* Define macros used in calculations */
#define INITVALUE (42)
#define INV(x) ((CCTK_REAL)1.0 / (x))
#define SQR(x) ((x) * (x))
#define CUB(x) ((x) * SQR(x))
#define QAD(x) (SQR(SQR(x)))

CAKERNEL_ML_BSSN_CaKernel_RHS1_Begin
  /* Include user-supplied include files */
  /* Initialise finite differencing variables */
  const CCTK_REAL dx CCTK_ATTRIBUTE_UNUSED = params.cagh_dx;
  const CCTK_REAL dy CCTK_ATTRIBUTE_UNUSED = params.cagh_dy;
  const CCTK_REAL dz CCTK_ATTRIBUTE_UNUSED = params.cagh_dz;
  const CCTK_REAL dt CCTK_ATTRIBUTE_UNUSED = params.cagh_dt;
  const CCTK_REAL t CCTK_ATTRIBUTE_UNUSED = params.cagh_time;
  const CCTK_REAL dxi CCTK_ATTRIBUTE_UNUSED = INV(dx);
  const CCTK_REAL dyi CCTK_ATTRIBUTE_UNUSED = INV(dy);
  const CCTK_REAL dzi CCTK_ATTRIBUTE_UNUSED = INV(dz);
  const CCTK_REAL khalf CCTK_ATTRIBUTE_UNUSED = 0.5;
  const CCTK_REAL kthird CCTK_ATTRIBUTE_UNUSED = 1/3.0;
  const CCTK_REAL ktwothird CCTK_ATTRIBUTE_UNUSED = 2.0/3.0;
  const CCTK_REAL kfourthird CCTK_ATTRIBUTE_UNUSED = 4.0/3.0;
  const CCTK_REAL keightthird CCTK_ATTRIBUTE_UNUSED = 8.0/3.0;
  const CCTK_REAL hdxi CCTK_ATTRIBUTE_UNUSED = 0.5 * dxi;
  const CCTK_REAL hdyi CCTK_ATTRIBUTE_UNUSED = 0.5 * dyi;
  const CCTK_REAL hdzi CCTK_ATTRIBUTE_UNUSED = 0.5 * dzi;
  /* Initialize predefined quantities */
  const CCTK_REAL p1o12dx CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.0833333333333333333333333333333),dx);
  const CCTK_REAL p1o12dy CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.0833333333333333333333333333333),dy);
  const CCTK_REAL p1o12dz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.0833333333333333333333333333333),dz);
  const CCTK_REAL p1o144dxdy CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.00694444444444444444444444444444),kmul(dy,dx));
  const CCTK_REAL p1o144dxdz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.00694444444444444444444444444444),kmul(dz,dx));
  const CCTK_REAL p1o144dydz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.00694444444444444444444444444444),kmul(dz,dy));
  const CCTK_REAL p1o24dx CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.0416666666666666666666666666667),dx);
  const CCTK_REAL p1o24dy CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.0416666666666666666666666666667),dy);
  const CCTK_REAL p1o24dz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.0416666666666666666666666666667),dz);
  const CCTK_REAL p1o2dx CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.5),dx);
  const CCTK_REAL p1o2dy CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.5),dy);
  const CCTK_REAL p1o2dz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.5),dz);
  const CCTK_REAL p1o4dx CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.25),dx);
  const CCTK_REAL p1o4dxdy CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.25),kmul(dy,dx));
  const CCTK_REAL p1o4dxdz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.25),kmul(dz,dx));
  const CCTK_REAL p1o4dy CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.25),dy);
  const CCTK_REAL p1o4dydz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.25),kmul(dz,dy));
  const CCTK_REAL p1o4dz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.25),dz);
  const CCTK_REAL p1o64dx CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.015625),dx);
  const CCTK_REAL p1o64dy CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.015625),dy);
  const CCTK_REAL p1o64dz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(0.015625),dz);
  const CCTK_REAL p1odx CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(1),dx);
  const CCTK_REAL p1odx2 CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(1),kmul(dx,dx));
  const CCTK_REAL p1ody CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(1),dy);
  const CCTK_REAL p1ody2 CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(1),kmul(dy,dy));
  const CCTK_REAL p1odz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(1),dz);
  const CCTK_REAL p1odz2 CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(1),kmul(dz,dz));
  const CCTK_REAL pm1o12dx2 CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.0833333333333333333333333333333),kmul(dx,dx));
  const CCTK_REAL pm1o12dy2 CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.0833333333333333333333333333333),kmul(dy,dy));
  const CCTK_REAL pm1o12dz2 CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.0833333333333333333333333333333),kmul(dz,dz));
  const CCTK_REAL pm1o16dx CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.0625),dx);
  const CCTK_REAL pm1o16dy CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.0625),dy);
  const CCTK_REAL pm1o16dz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.0625),dz);
  const CCTK_REAL pm1o2dx CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.5),dx);
  const CCTK_REAL pm1o2dy CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.5),dy);
  const CCTK_REAL pm1o2dz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.5),dz);
  const CCTK_REAL pm1o4dx CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.25),dx);
  const CCTK_REAL pm1o4dy CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.25),dy);
  const CCTK_REAL pm1o4dz CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(-0.25),dz);
  /* Jacobian variable pointers */
  const bool use_jacobian1 = (!CCTK_IsFunctionAliased("MultiPatch_GetMap") || MultiPatch_GetMap(cctkGH) != jacobian_identity_map)
                        && strlen(jacobian_group) > 0;
  const bool use_jacobian = assume_use_jacobian>=0 ? assume_use_jacobian : use_jacobian1;
  const bool usejacobian CCTK_ATTRIBUTE_UNUSED = use_jacobian;
  if (use_jacobian && (strlen(jacobian_derivative_group) == 0))
  {
    CCTK_WARN(1, "GenericFD::jacobian_group and GenericFD::jacobian_derivative_group must both be set to valid group names");
  }
  
  const CCTK_REAL* restrict jacobian_ptrs[9];
  if (use_jacobian) GroupDataPointers(cctkGH, jacobian_group,
                                                9, jacobian_ptrs);
  
  const CCTK_REAL* restrict const J11 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_ptrs[0] : 0;
  const CCTK_REAL* restrict const J12 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_ptrs[1] : 0;
  const CCTK_REAL* restrict const J13 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_ptrs[2] : 0;
  const CCTK_REAL* restrict const J21 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_ptrs[3] : 0;
  const CCTK_REAL* restrict const J22 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_ptrs[4] : 0;
  const CCTK_REAL* restrict const J23 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_ptrs[5] : 0;
  const CCTK_REAL* restrict const J31 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_ptrs[6] : 0;
  const CCTK_REAL* restrict const J32 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_ptrs[7] : 0;
  const CCTK_REAL* restrict const J33 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_ptrs[8] : 0;
  
  const CCTK_REAL* restrict jacobian_determinant_ptrs[1] CCTK_ATTRIBUTE_UNUSED;
  if (use_jacobian && strlen(jacobian_determinant_group) > 0) GroupDataPointers(cctkGH, jacobian_determinant_group,
                                                1, jacobian_determinant_ptrs);
  
  const CCTK_REAL* restrict const detJ CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_ptrs[0] : 0;
  
  const CCTK_REAL* restrict jacobian_inverse_ptrs[9] CCTK_ATTRIBUTE_UNUSED;
  if (use_jacobian && strlen(jacobian_inverse_group) > 0) GroupDataPointers(cctkGH, jacobian_inverse_group,
                                                9, jacobian_inverse_ptrs);
  
  const CCTK_REAL* restrict const iJ11 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_inverse_ptrs[0] : 0;
  const CCTK_REAL* restrict const iJ12 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_inverse_ptrs[1] : 0;
  const CCTK_REAL* restrict const iJ13 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_inverse_ptrs[2] : 0;
  const CCTK_REAL* restrict const iJ21 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_inverse_ptrs[3] : 0;
  const CCTK_REAL* restrict const iJ22 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_inverse_ptrs[4] : 0;
  const CCTK_REAL* restrict const iJ23 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_inverse_ptrs[5] : 0;
  const CCTK_REAL* restrict const iJ31 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_inverse_ptrs[6] : 0;
  const CCTK_REAL* restrict const iJ32 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_inverse_ptrs[7] : 0;
  const CCTK_REAL* restrict const iJ33 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_inverse_ptrs[8] : 0;
  
  const CCTK_REAL* restrict jacobian_derivative_ptrs[18] CCTK_ATTRIBUTE_UNUSED;
  if (use_jacobian) GroupDataPointers(cctkGH, jacobian_derivative_group,
                                      18, jacobian_derivative_ptrs);
  
  const CCTK_REAL* restrict const dJ111 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[0] : 0;
  const CCTK_REAL* restrict const dJ112 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[1] : 0;
  const CCTK_REAL* restrict const dJ113 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[2] : 0;
  const CCTK_REAL* restrict const dJ122 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[3] : 0;
  const CCTK_REAL* restrict const dJ123 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[4] : 0;
  const CCTK_REAL* restrict const dJ133 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[5] : 0;
  const CCTK_REAL* restrict const dJ211 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[6] : 0;
  const CCTK_REAL* restrict const dJ212 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[7] : 0;
  const CCTK_REAL* restrict const dJ213 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[8] : 0;
  const CCTK_REAL* restrict const dJ222 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[9] : 0;
  const CCTK_REAL* restrict const dJ223 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[10] : 0;
  const CCTK_REAL* restrict const dJ233 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[11] : 0;
  const CCTK_REAL* restrict const dJ311 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[12] : 0;
  const CCTK_REAL* restrict const dJ312 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[13] : 0;
  const CCTK_REAL* restrict const dJ313 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[14] : 0;
  const CCTK_REAL* restrict const dJ322 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[15] : 0;
  const CCTK_REAL* restrict const dJ323 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[16] : 0;
  const CCTK_REAL* restrict const dJ333 CCTK_ATTRIBUTE_UNUSED = use_jacobian ? jacobian_derivative_ptrs[17] : 0;
  /* Assign local copies of arrays functions */
  
  
  /* Calculate temporaries and arrays functions */
  /* Copy local copies back to grid functions */
  CAKERNEL_ML_BSSN_CaKernel_RHS1_Computations_Begin
    /* Assign local copies of grid functions */
    
    CCTK_REAL AL CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(A,0,0,0));
    CCTK_REAL alphaL CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(alpha,0,0,0));
    CCTK_REAL At11L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(At11,0,0,0));
    CCTK_REAL At12L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(At12,0,0,0));
    CCTK_REAL At13L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(At13,0,0,0));
    CCTK_REAL At22L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(At22,0,0,0));
    CCTK_REAL At23L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(At23,0,0,0));
    CCTK_REAL At33L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(At33,0,0,0));
    CCTK_REAL B1L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(B1,0,0,0));
    CCTK_REAL B2L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(B2,0,0,0));
    CCTK_REAL B3L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(B3,0,0,0));
    CCTK_REAL beta1L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(beta1,0,0,0));
    CCTK_REAL beta2L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(beta2,0,0,0));
    CCTK_REAL beta3L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(beta3,0,0,0));
    CCTK_REAL gt11L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(gt11,0,0,0));
    CCTK_REAL gt12L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(gt12,0,0,0));
    CCTK_REAL gt13L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(gt13,0,0,0));
    CCTK_REAL gt22L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(gt22,0,0,0));
    CCTK_REAL gt23L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(gt23,0,0,0));
    CCTK_REAL gt33L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(gt33,0,0,0));
    CCTK_REAL phiL CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(phi,0,0,0));
    CCTK_REAL rL CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(r,0,0,0));
    CCTK_REAL trKL CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(trK,0,0,0));
    CCTK_REAL Xt1L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(Xt1,0,0,0));
    CCTK_REAL Xt2L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(Xt2,0,0,0));
    CCTK_REAL Xt3L CCTK_ATTRIBUTE_UNUSED = vec_load(I3D(Xt3,0,0,0));
    
    CCTK_REAL eTttL, eTtxL, eTtyL, eTtzL, eTxxL, eTxyL, eTxzL, eTyyL, eTyzL, eTzzL CCTK_ATTRIBUTE_UNUSED ;
    
    if (assume_stress_energy_state>=0 ? assume_stress_energy_state : *stress_energy_state)
    {
      eTttL = vec_load(I3D(eTtt,0,0,0));
      eTtxL = vec_load(I3D(eTtx,0,0,0));
      eTtyL = vec_load(I3D(eTty,0,0,0));
      eTtzL = vec_load(I3D(eTtz,0,0,0));
      eTxxL = vec_load(I3D(eTxx,0,0,0));
      eTxyL = vec_load(I3D(eTxy,0,0,0));
      eTxzL = vec_load(I3D(eTxz,0,0,0));
      eTyyL = vec_load(I3D(eTyy,0,0,0));
      eTyzL = vec_load(I3D(eTyz,0,0,0));
      eTzzL = vec_load(I3D(eTzz,0,0,0));
    }
    else
    {
      eTttL = ToReal(0.0);
      eTtxL = ToReal(0.0);
      eTtyL = ToReal(0.0);
      eTtzL = ToReal(0.0);
      eTxxL = ToReal(0.0);
      eTxyL = ToReal(0.0);
      eTxzL = ToReal(0.0);
      eTyyL = ToReal(0.0);
      eTyzL = ToReal(0.0);
      eTzzL = ToReal(0.0);
    }
    
    CCTK_REAL dJ111L, dJ112L, dJ113L, dJ122L, dJ123L, dJ133L, dJ211L, dJ212L, dJ213L, dJ222L, dJ223L, dJ233L, dJ311L, dJ312L, dJ313L, dJ322L, dJ323L, dJ333L, J11L, J12L, J13L, J21L, J22L, J23L, J31L, J32L, J33L CCTK_ATTRIBUTE_UNUSED ;
    
    if (use_jacobian)
    {
      dJ111L = vec_load(I3D(dJ111,0,0,0));
      dJ112L = vec_load(I3D(dJ112,0,0,0));
      dJ113L = vec_load(I3D(dJ113,0,0,0));
      dJ122L = vec_load(I3D(dJ122,0,0,0));
      dJ123L = vec_load(I3D(dJ123,0,0,0));
      dJ133L = vec_load(I3D(dJ133,0,0,0));
      dJ211L = vec_load(I3D(dJ211,0,0,0));
      dJ212L = vec_load(I3D(dJ212,0,0,0));
      dJ213L = vec_load(I3D(dJ213,0,0,0));
      dJ222L = vec_load(I3D(dJ222,0,0,0));
      dJ223L = vec_load(I3D(dJ223,0,0,0));
      dJ233L = vec_load(I3D(dJ233,0,0,0));
      dJ311L = vec_load(I3D(dJ311,0,0,0));
      dJ312L = vec_load(I3D(dJ312,0,0,0));
      dJ313L = vec_load(I3D(dJ313,0,0,0));
      dJ322L = vec_load(I3D(dJ322,0,0,0));
      dJ323L = vec_load(I3D(dJ323,0,0,0));
      dJ333L = vec_load(I3D(dJ333,0,0,0));
      J11L = vec_load(I3D(J11,0,0,0));
      J12L = vec_load(I3D(J12,0,0,0));
      J13L = vec_load(I3D(J13,0,0,0));
      J21L = vec_load(I3D(J21,0,0,0));
      J22L = vec_load(I3D(J22,0,0,0));
      J23L = vec_load(I3D(J23,0,0,0));
      J31L = vec_load(I3D(J31,0,0,0));
      J32L = vec_load(I3D(J32,0,0,0));
      J33L = vec_load(I3D(J33,0,0,0));
    }
    /* Include user supplied include files */
    /* Precompute derivatives */
    CCTK_REAL PDstandardNth1alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth11alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth22alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth33alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth12alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth13alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth23alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth11beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth22beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth33beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth12beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth13beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth23beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth11beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth22beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth33beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth12beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth13beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth23beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth11beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth22beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth33beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth12beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth13beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth23beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1gt11 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2gt11 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3gt11 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1gt12 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2gt12 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3gt12 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1gt13 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2gt13 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3gt13 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1gt22 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2gt22 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3gt22 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1gt23 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2gt23 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3gt23 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1gt33 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2gt33 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3gt33 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1phi CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2phi CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3phi CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth1trK CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth2trK CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL PDstandardNth3trK CCTK_ATTRIBUTE_UNUSED;
    
    switch (fdOrder)
    {
      case 2:
      {
        PDstandardNth1alpha = PDstandardNthfdOrder21(alpha);
        PDstandardNth2alpha = PDstandardNthfdOrder22(alpha);
        PDstandardNth3alpha = PDstandardNthfdOrder23(alpha);
        PDstandardNth11alpha = PDstandardNthfdOrder211(alpha);
        PDstandardNth22alpha = PDstandardNthfdOrder222(alpha);
        PDstandardNth33alpha = PDstandardNthfdOrder233(alpha);
        PDstandardNth12alpha = PDstandardNthfdOrder212(alpha);
        PDstandardNth13alpha = PDstandardNthfdOrder213(alpha);
        PDstandardNth23alpha = PDstandardNthfdOrder223(alpha);
        PDstandardNth1beta1 = PDstandardNthfdOrder21(beta1);
        PDstandardNth2beta1 = PDstandardNthfdOrder22(beta1);
        PDstandardNth3beta1 = PDstandardNthfdOrder23(beta1);
        PDstandardNth11beta1 = PDstandardNthfdOrder211(beta1);
        PDstandardNth22beta1 = PDstandardNthfdOrder222(beta1);
        PDstandardNth33beta1 = PDstandardNthfdOrder233(beta1);
        PDstandardNth12beta1 = PDstandardNthfdOrder212(beta1);
        PDstandardNth13beta1 = PDstandardNthfdOrder213(beta1);
        PDstandardNth23beta1 = PDstandardNthfdOrder223(beta1);
        PDstandardNth1beta2 = PDstandardNthfdOrder21(beta2);
        PDstandardNth2beta2 = PDstandardNthfdOrder22(beta2);
        PDstandardNth3beta2 = PDstandardNthfdOrder23(beta2);
        PDstandardNth11beta2 = PDstandardNthfdOrder211(beta2);
        PDstandardNth22beta2 = PDstandardNthfdOrder222(beta2);
        PDstandardNth33beta2 = PDstandardNthfdOrder233(beta2);
        PDstandardNth12beta2 = PDstandardNthfdOrder212(beta2);
        PDstandardNth13beta2 = PDstandardNthfdOrder213(beta2);
        PDstandardNth23beta2 = PDstandardNthfdOrder223(beta2);
        PDstandardNth1beta3 = PDstandardNthfdOrder21(beta3);
        PDstandardNth2beta3 = PDstandardNthfdOrder22(beta3);
        PDstandardNth3beta3 = PDstandardNthfdOrder23(beta3);
        PDstandardNth11beta3 = PDstandardNthfdOrder211(beta3);
        PDstandardNth22beta3 = PDstandardNthfdOrder222(beta3);
        PDstandardNth33beta3 = PDstandardNthfdOrder233(beta3);
        PDstandardNth12beta3 = PDstandardNthfdOrder212(beta3);
        PDstandardNth13beta3 = PDstandardNthfdOrder213(beta3);
        PDstandardNth23beta3 = PDstandardNthfdOrder223(beta3);
        PDstandardNth1gt11 = PDstandardNthfdOrder21(gt11);
        PDstandardNth2gt11 = PDstandardNthfdOrder22(gt11);
        PDstandardNth3gt11 = PDstandardNthfdOrder23(gt11);
        PDstandardNth1gt12 = PDstandardNthfdOrder21(gt12);
        PDstandardNth2gt12 = PDstandardNthfdOrder22(gt12);
        PDstandardNth3gt12 = PDstandardNthfdOrder23(gt12);
        PDstandardNth1gt13 = PDstandardNthfdOrder21(gt13);
        PDstandardNth2gt13 = PDstandardNthfdOrder22(gt13);
        PDstandardNth3gt13 = PDstandardNthfdOrder23(gt13);
        PDstandardNth1gt22 = PDstandardNthfdOrder21(gt22);
        PDstandardNth2gt22 = PDstandardNthfdOrder22(gt22);
        PDstandardNth3gt22 = PDstandardNthfdOrder23(gt22);
        PDstandardNth1gt23 = PDstandardNthfdOrder21(gt23);
        PDstandardNth2gt23 = PDstandardNthfdOrder22(gt23);
        PDstandardNth3gt23 = PDstandardNthfdOrder23(gt23);
        PDstandardNth1gt33 = PDstandardNthfdOrder21(gt33);
        PDstandardNth2gt33 = PDstandardNthfdOrder22(gt33);
        PDstandardNth3gt33 = PDstandardNthfdOrder23(gt33);
        PDstandardNth1phi = PDstandardNthfdOrder21(phi);
        PDstandardNth2phi = PDstandardNthfdOrder22(phi);
        PDstandardNth3phi = PDstandardNthfdOrder23(phi);
        PDstandardNth1trK = PDstandardNthfdOrder21(trK);
        PDstandardNth2trK = PDstandardNthfdOrder22(trK);
        PDstandardNth3trK = PDstandardNthfdOrder23(trK);
        break;
      }
      
      case 4:
      {
        PDstandardNth1alpha = PDstandardNthfdOrder41(alpha);
        PDstandardNth2alpha = PDstandardNthfdOrder42(alpha);
        PDstandardNth3alpha = PDstandardNthfdOrder43(alpha);
        PDstandardNth11alpha = PDstandardNthfdOrder411(alpha);
        PDstandardNth22alpha = PDstandardNthfdOrder422(alpha);
        PDstandardNth33alpha = PDstandardNthfdOrder433(alpha);
        PDstandardNth12alpha = PDstandardNthfdOrder412(alpha);
        PDstandardNth13alpha = PDstandardNthfdOrder413(alpha);
        PDstandardNth23alpha = PDstandardNthfdOrder423(alpha);
        PDstandardNth1beta1 = PDstandardNthfdOrder41(beta1);
        PDstandardNth2beta1 = PDstandardNthfdOrder42(beta1);
        PDstandardNth3beta1 = PDstandardNthfdOrder43(beta1);
        PDstandardNth11beta1 = PDstandardNthfdOrder411(beta1);
        PDstandardNth22beta1 = PDstandardNthfdOrder422(beta1);
        PDstandardNth33beta1 = PDstandardNthfdOrder433(beta1);
        PDstandardNth12beta1 = PDstandardNthfdOrder412(beta1);
        PDstandardNth13beta1 = PDstandardNthfdOrder413(beta1);
        PDstandardNth23beta1 = PDstandardNthfdOrder423(beta1);
        PDstandardNth1beta2 = PDstandardNthfdOrder41(beta2);
        PDstandardNth2beta2 = PDstandardNthfdOrder42(beta2);
        PDstandardNth3beta2 = PDstandardNthfdOrder43(beta2);
        PDstandardNth11beta2 = PDstandardNthfdOrder411(beta2);
        PDstandardNth22beta2 = PDstandardNthfdOrder422(beta2);
        PDstandardNth33beta2 = PDstandardNthfdOrder433(beta2);
        PDstandardNth12beta2 = PDstandardNthfdOrder412(beta2);
        PDstandardNth13beta2 = PDstandardNthfdOrder413(beta2);
        PDstandardNth23beta2 = PDstandardNthfdOrder423(beta2);
        PDstandardNth1beta3 = PDstandardNthfdOrder41(beta3);
        PDstandardNth2beta3 = PDstandardNthfdOrder42(beta3);
        PDstandardNth3beta3 = PDstandardNthfdOrder43(beta3);
        PDstandardNth11beta3 = PDstandardNthfdOrder411(beta3);
        PDstandardNth22beta3 = PDstandardNthfdOrder422(beta3);
        PDstandardNth33beta3 = PDstandardNthfdOrder433(beta3);
        PDstandardNth12beta3 = PDstandardNthfdOrder412(beta3);
        PDstandardNth13beta3 = PDstandardNthfdOrder413(beta3);
        PDstandardNth23beta3 = PDstandardNthfdOrder423(beta3);
        PDstandardNth1gt11 = PDstandardNthfdOrder41(gt11);
        PDstandardNth2gt11 = PDstandardNthfdOrder42(gt11);
        PDstandardNth3gt11 = PDstandardNthfdOrder43(gt11);
        PDstandardNth1gt12 = PDstandardNthfdOrder41(gt12);
        PDstandardNth2gt12 = PDstandardNthfdOrder42(gt12);
        PDstandardNth3gt12 = PDstandardNthfdOrder43(gt12);
        PDstandardNth1gt13 = PDstandardNthfdOrder41(gt13);
        PDstandardNth2gt13 = PDstandardNthfdOrder42(gt13);
        PDstandardNth3gt13 = PDstandardNthfdOrder43(gt13);
        PDstandardNth1gt22 = PDstandardNthfdOrder41(gt22);
        PDstandardNth2gt22 = PDstandardNthfdOrder42(gt22);
        PDstandardNth3gt22 = PDstandardNthfdOrder43(gt22);
        PDstandardNth1gt23 = PDstandardNthfdOrder41(gt23);
        PDstandardNth2gt23 = PDstandardNthfdOrder42(gt23);
        PDstandardNth3gt23 = PDstandardNthfdOrder43(gt23);
        PDstandardNth1gt33 = PDstandardNthfdOrder41(gt33);
        PDstandardNth2gt33 = PDstandardNthfdOrder42(gt33);
        PDstandardNth3gt33 = PDstandardNthfdOrder43(gt33);
        PDstandardNth1phi = PDstandardNthfdOrder41(phi);
        PDstandardNth2phi = PDstandardNthfdOrder42(phi);
        PDstandardNth3phi = PDstandardNthfdOrder43(phi);
        PDstandardNth1trK = PDstandardNthfdOrder41(trK);
        PDstandardNth2trK = PDstandardNthfdOrder42(trK);
        PDstandardNth3trK = PDstandardNthfdOrder43(trK);
        break;
      }
      default:
        CCTK_BUILTIN_UNREACHABLE();
    }
    /* Calculate temporaries and grid functions */
    ptrdiff_t dir1 CCTK_ATTRIBUTE_UNUSED = kisgn(beta1L);
    
    ptrdiff_t dir2 CCTK_ATTRIBUTE_UNUSED = kisgn(beta2L);
    
    ptrdiff_t dir3 CCTK_ATTRIBUTE_UNUSED = kisgn(beta3L);
    
    CCTK_REAL JacPDstandardNth11alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth11beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth11beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth11beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth12alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth12beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth12beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth12beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth13alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth13beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth13beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth13beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1gt11 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1gt12 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1gt13 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1gt22 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1gt23 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1gt33 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1phi CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth1trK CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth21alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth21beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth21beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth21beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth22alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth22beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth22beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth22beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth23alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth23beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth23beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth23beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2gt11 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2gt12 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2gt13 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2gt22 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2gt23 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2gt33 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2phi CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth2trK CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth31alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth31beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth31beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth31beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth32alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth32beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth32beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth32beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth33alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth33beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth33beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth33beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3alpha CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3beta1 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3beta2 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3beta3 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3gt11 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3gt12 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3gt13 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3gt22 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3gt23 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3gt33 CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3phi CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL JacPDstandardNth3trK CCTK_ATTRIBUTE_UNUSED;
    
    if (use_jacobian)
    {
      JacPDstandardNth1alpha = 
        kmadd(J11L,PDstandardNth1alpha,kmadd(J21L,PDstandardNth2alpha,kmul(J31L,PDstandardNth3alpha)));
      
      JacPDstandardNth1beta1 = 
        kmadd(J11L,PDstandardNth1beta1,kmadd(J21L,PDstandardNth2beta1,kmul(J31L,PDstandardNth3beta1)));
      
      JacPDstandardNth1beta2 = 
        kmadd(J11L,PDstandardNth1beta2,kmadd(J21L,PDstandardNth2beta2,kmul(J31L,PDstandardNth3beta2)));
      
      JacPDstandardNth1beta3 = 
        kmadd(J11L,PDstandardNth1beta3,kmadd(J21L,PDstandardNth2beta3,kmul(J31L,PDstandardNth3beta3)));
      
      JacPDstandardNth1gt11 = 
        kmadd(J11L,PDstandardNth1gt11,kmadd(J21L,PDstandardNth2gt11,kmul(J31L,PDstandardNth3gt11)));
      
      JacPDstandardNth1gt12 = 
        kmadd(J11L,PDstandardNth1gt12,kmadd(J21L,PDstandardNth2gt12,kmul(J31L,PDstandardNth3gt12)));
      
      JacPDstandardNth1gt13 = 
        kmadd(J11L,PDstandardNth1gt13,kmadd(J21L,PDstandardNth2gt13,kmul(J31L,PDstandardNth3gt13)));
      
      JacPDstandardNth1gt22 = 
        kmadd(J11L,PDstandardNth1gt22,kmadd(J21L,PDstandardNth2gt22,kmul(J31L,PDstandardNth3gt22)));
      
      JacPDstandardNth1gt23 = 
        kmadd(J11L,PDstandardNth1gt23,kmadd(J21L,PDstandardNth2gt23,kmul(J31L,PDstandardNth3gt23)));
      
      JacPDstandardNth1gt33 = 
        kmadd(J11L,PDstandardNth1gt33,kmadd(J21L,PDstandardNth2gt33,kmul(J31L,PDstandardNth3gt33)));
      
      JacPDstandardNth1phi = 
        kmadd(J11L,PDstandardNth1phi,kmadd(J21L,PDstandardNth2phi,kmul(J31L,PDstandardNth3phi)));
      
      JacPDstandardNth1trK = 
        kmadd(J11L,PDstandardNth1trK,kmadd(J21L,PDstandardNth2trK,kmul(J31L,PDstandardNth3trK)));
      
      JacPDstandardNth2alpha = 
        kmadd(J12L,PDstandardNth1alpha,kmadd(J22L,PDstandardNth2alpha,kmul(J32L,PDstandardNth3alpha)));
      
      JacPDstandardNth2beta1 = 
        kmadd(J12L,PDstandardNth1beta1,kmadd(J22L,PDstandardNth2beta1,kmul(J32L,PDstandardNth3beta1)));
      
      JacPDstandardNth2beta2 = 
        kmadd(J12L,PDstandardNth1beta2,kmadd(J22L,PDstandardNth2beta2,kmul(J32L,PDstandardNth3beta2)));
      
      JacPDstandardNth2beta3 = 
        kmadd(J12L,PDstandardNth1beta3,kmadd(J22L,PDstandardNth2beta3,kmul(J32L,PDstandardNth3beta3)));
      
      JacPDstandardNth2gt11 = 
        kmadd(J12L,PDstandardNth1gt11,kmadd(J22L,PDstandardNth2gt11,kmul(J32L,PDstandardNth3gt11)));
      
      JacPDstandardNth2gt12 = 
        kmadd(J12L,PDstandardNth1gt12,kmadd(J22L,PDstandardNth2gt12,kmul(J32L,PDstandardNth3gt12)));
      
      JacPDstandardNth2gt13 = 
        kmadd(J12L,PDstandardNth1gt13,kmadd(J22L,PDstandardNth2gt13,kmul(J32L,PDstandardNth3gt13)));
      
      JacPDstandardNth2gt22 = 
        kmadd(J12L,PDstandardNth1gt22,kmadd(J22L,PDstandardNth2gt22,kmul(J32L,PDstandardNth3gt22)));
      
      JacPDstandardNth2gt23 = 
        kmadd(J12L,PDstandardNth1gt23,kmadd(J22L,PDstandardNth2gt23,kmul(J32L,PDstandardNth3gt23)));
      
      JacPDstandardNth2gt33 = 
        kmadd(J12L,PDstandardNth1gt33,kmadd(J22L,PDstandardNth2gt33,kmul(J32L,PDstandardNth3gt33)));
      
      JacPDstandardNth2phi = 
        kmadd(J12L,PDstandardNth1phi,kmadd(J22L,PDstandardNth2phi,kmul(J32L,PDstandardNth3phi)));
      
      JacPDstandardNth2trK = 
        kmadd(J12L,PDstandardNth1trK,kmadd(J22L,PDstandardNth2trK,kmul(J32L,PDstandardNth3trK)));
      
      JacPDstandardNth3alpha = 
        kmadd(J13L,PDstandardNth1alpha,kmadd(J23L,PDstandardNth2alpha,kmul(J33L,PDstandardNth3alpha)));
      
      JacPDstandardNth3beta1 = 
        kmadd(J13L,PDstandardNth1beta1,kmadd(J23L,PDstandardNth2beta1,kmul(J33L,PDstandardNth3beta1)));
      
      JacPDstandardNth3beta2 = 
        kmadd(J13L,PDstandardNth1beta2,kmadd(J23L,PDstandardNth2beta2,kmul(J33L,PDstandardNth3beta2)));
      
      JacPDstandardNth3beta3 = 
        kmadd(J13L,PDstandardNth1beta3,kmadd(J23L,PDstandardNth2beta3,kmul(J33L,PDstandardNth3beta3)));
      
      JacPDstandardNth3gt11 = 
        kmadd(J13L,PDstandardNth1gt11,kmadd(J23L,PDstandardNth2gt11,kmul(J33L,PDstandardNth3gt11)));
      
      JacPDstandardNth3gt12 = 
        kmadd(J13L,PDstandardNth1gt12,kmadd(J23L,PDstandardNth2gt12,kmul(J33L,PDstandardNth3gt12)));
      
      JacPDstandardNth3gt13 = 
        kmadd(J13L,PDstandardNth1gt13,kmadd(J23L,PDstandardNth2gt13,kmul(J33L,PDstandardNth3gt13)));
      
      JacPDstandardNth3gt22 = 
        kmadd(J13L,PDstandardNth1gt22,kmadd(J23L,PDstandardNth2gt22,kmul(J33L,PDstandardNth3gt22)));
      
      JacPDstandardNth3gt23 = 
        kmadd(J13L,PDstandardNth1gt23,kmadd(J23L,PDstandardNth2gt23,kmul(J33L,PDstandardNth3gt23)));
      
      JacPDstandardNth3gt33 = 
        kmadd(J13L,PDstandardNth1gt33,kmadd(J23L,PDstandardNth2gt33,kmul(J33L,PDstandardNth3gt33)));
      
      JacPDstandardNth3phi = 
        kmadd(J13L,PDstandardNth1phi,kmadd(J23L,PDstandardNth2phi,kmul(J33L,PDstandardNth3phi)));
      
      JacPDstandardNth3trK = 
        kmadd(J13L,PDstandardNth1trK,kmadd(J23L,PDstandardNth2trK,kmul(J33L,PDstandardNth3trK)));
      
      JacPDstandardNth11alpha = 
        kmadd(dJ111L,PDstandardNth1alpha,kmadd(dJ211L,PDstandardNth2alpha,kmadd(dJ311L,PDstandardNth3alpha,kmadd(PDstandardNth11alpha,kmul(J11L,J11L),kmadd(PDstandardNth22alpha,kmul(J21L,J21L),kmadd(PDstandardNth33alpha,kmul(J31L,J31L),kmadd(J11L,kmul(J21L,kmul(PDstandardNth12alpha,ToReal(2))),kmadd(J11L,kmul(J31L,kmul(PDstandardNth13alpha,ToReal(2))),kmul(J21L,kmul(J31L,kmul(PDstandardNth23alpha,ToReal(2))))))))))));
      
      JacPDstandardNth11beta1 = 
        kmadd(dJ111L,PDstandardNth1beta1,kmadd(dJ211L,PDstandardNth2beta1,kmadd(dJ311L,PDstandardNth3beta1,kmadd(PDstandardNth11beta1,kmul(J11L,J11L),kmadd(PDstandardNth22beta1,kmul(J21L,J21L),kmadd(PDstandardNth33beta1,kmul(J31L,J31L),kmadd(J11L,kmul(J21L,kmul(PDstandardNth12beta1,ToReal(2))),kmadd(J11L,kmul(J31L,kmul(PDstandardNth13beta1,ToReal(2))),kmul(J21L,kmul(J31L,kmul(PDstandardNth23beta1,ToReal(2))))))))))));
      
      JacPDstandardNth11beta2 = 
        kmadd(dJ111L,PDstandardNth1beta2,kmadd(dJ211L,PDstandardNth2beta2,kmadd(dJ311L,PDstandardNth3beta2,kmadd(PDstandardNth11beta2,kmul(J11L,J11L),kmadd(PDstandardNth22beta2,kmul(J21L,J21L),kmadd(PDstandardNth33beta2,kmul(J31L,J31L),kmadd(J11L,kmul(J21L,kmul(PDstandardNth12beta2,ToReal(2))),kmadd(J11L,kmul(J31L,kmul(PDstandardNth13beta2,ToReal(2))),kmul(J21L,kmul(J31L,kmul(PDstandardNth23beta2,ToReal(2))))))))))));
      
      JacPDstandardNth11beta3 = 
        kmadd(dJ111L,PDstandardNth1beta3,kmadd(dJ211L,PDstandardNth2beta3,kmadd(dJ311L,PDstandardNth3beta3,kmadd(PDstandardNth11beta3,kmul(J11L,J11L),kmadd(PDstandardNth22beta3,kmul(J21L,J21L),kmadd(PDstandardNth33beta3,kmul(J31L,J31L),kmadd(J11L,kmul(J21L,kmul(PDstandardNth12beta3,ToReal(2))),kmadd(J11L,kmul(J31L,kmul(PDstandardNth13beta3,ToReal(2))),kmul(J21L,kmul(J31L,kmul(PDstandardNth23beta3,ToReal(2))))))))))));
      
      JacPDstandardNth22alpha = 
        kmadd(dJ122L,PDstandardNth1alpha,kmadd(dJ222L,PDstandardNth2alpha,kmadd(dJ322L,PDstandardNth3alpha,kmadd(PDstandardNth11alpha,kmul(J12L,J12L),kmadd(PDstandardNth22alpha,kmul(J22L,J22L),kmadd(PDstandardNth33alpha,kmul(J32L,J32L),kmadd(J12L,kmul(J22L,kmul(PDstandardNth12alpha,ToReal(2))),kmadd(J12L,kmul(J32L,kmul(PDstandardNth13alpha,ToReal(2))),kmul(J22L,kmul(J32L,kmul(PDstandardNth23alpha,ToReal(2))))))))))));
      
      JacPDstandardNth22beta1 = 
        kmadd(dJ122L,PDstandardNth1beta1,kmadd(dJ222L,PDstandardNth2beta1,kmadd(dJ322L,PDstandardNth3beta1,kmadd(PDstandardNth11beta1,kmul(J12L,J12L),kmadd(PDstandardNth22beta1,kmul(J22L,J22L),kmadd(PDstandardNth33beta1,kmul(J32L,J32L),kmadd(J12L,kmul(J22L,kmul(PDstandardNth12beta1,ToReal(2))),kmadd(J12L,kmul(J32L,kmul(PDstandardNth13beta1,ToReal(2))),kmul(J22L,kmul(J32L,kmul(PDstandardNth23beta1,ToReal(2))))))))))));
      
      JacPDstandardNth22beta2 = 
        kmadd(dJ122L,PDstandardNth1beta2,kmadd(dJ222L,PDstandardNth2beta2,kmadd(dJ322L,PDstandardNth3beta2,kmadd(PDstandardNth11beta2,kmul(J12L,J12L),kmadd(PDstandardNth22beta2,kmul(J22L,J22L),kmadd(PDstandardNth33beta2,kmul(J32L,J32L),kmadd(J12L,kmul(J22L,kmul(PDstandardNth12beta2,ToReal(2))),kmadd(J12L,kmul(J32L,kmul(PDstandardNth13beta2,ToReal(2))),kmul(J22L,kmul(J32L,kmul(PDstandardNth23beta2,ToReal(2))))))))))));
      
      JacPDstandardNth22beta3 = 
        kmadd(dJ122L,PDstandardNth1beta3,kmadd(dJ222L,PDstandardNth2beta3,kmadd(dJ322L,PDstandardNth3beta3,kmadd(PDstandardNth11beta3,kmul(J12L,J12L),kmadd(PDstandardNth22beta3,kmul(J22L,J22L),kmadd(PDstandardNth33beta3,kmul(J32L,J32L),kmadd(J12L,kmul(J22L,kmul(PDstandardNth12beta3,ToReal(2))),kmadd(J12L,kmul(J32L,kmul(PDstandardNth13beta3,ToReal(2))),kmul(J22L,kmul(J32L,kmul(PDstandardNth23beta3,ToReal(2))))))))))));
      
      JacPDstandardNth33alpha = 
        kmadd(dJ133L,PDstandardNth1alpha,kmadd(dJ233L,PDstandardNth2alpha,kmadd(dJ333L,PDstandardNth3alpha,kmadd(PDstandardNth11alpha,kmul(J13L,J13L),kmadd(PDstandardNth22alpha,kmul(J23L,J23L),kmadd(PDstandardNth33alpha,kmul(J33L,J33L),kmadd(J13L,kmul(J23L,kmul(PDstandardNth12alpha,ToReal(2))),kmadd(J13L,kmul(J33L,kmul(PDstandardNth13alpha,ToReal(2))),kmul(J23L,kmul(J33L,kmul(PDstandardNth23alpha,ToReal(2))))))))))));
      
      JacPDstandardNth33beta1 = 
        kmadd(dJ133L,PDstandardNth1beta1,kmadd(dJ233L,PDstandardNth2beta1,kmadd(dJ333L,PDstandardNth3beta1,kmadd(PDstandardNth11beta1,kmul(J13L,J13L),kmadd(PDstandardNth22beta1,kmul(J23L,J23L),kmadd(PDstandardNth33beta1,kmul(J33L,J33L),kmadd(J13L,kmul(J23L,kmul(PDstandardNth12beta1,ToReal(2))),kmadd(J13L,kmul(J33L,kmul(PDstandardNth13beta1,ToReal(2))),kmul(J23L,kmul(J33L,kmul(PDstandardNth23beta1,ToReal(2))))))))))));
      
      JacPDstandardNth33beta2 = 
        kmadd(dJ133L,PDstandardNth1beta2,kmadd(dJ233L,PDstandardNth2beta2,kmadd(dJ333L,PDstandardNth3beta2,kmadd(PDstandardNth11beta2,kmul(J13L,J13L),kmadd(PDstandardNth22beta2,kmul(J23L,J23L),kmadd(PDstandardNth33beta2,kmul(J33L,J33L),kmadd(J13L,kmul(J23L,kmul(PDstandardNth12beta2,ToReal(2))),kmadd(J13L,kmul(J33L,kmul(PDstandardNth13beta2,ToReal(2))),kmul(J23L,kmul(J33L,kmul(PDstandardNth23beta2,ToReal(2))))))))))));
      
      JacPDstandardNth33beta3 = 
        kmadd(dJ133L,PDstandardNth1beta3,kmadd(dJ233L,PDstandardNth2beta3,kmadd(dJ333L,PDstandardNth3beta3,kmadd(PDstandardNth11beta3,kmul(J13L,J13L),kmadd(PDstandardNth22beta3,kmul(J23L,J23L),kmadd(PDstandardNth33beta3,kmul(J33L,J33L),kmadd(J13L,kmul(J23L,kmul(PDstandardNth12beta3,ToReal(2))),kmadd(J13L,kmul(J33L,kmul(PDstandardNth13beta3,ToReal(2))),kmul(J23L,kmul(J33L,kmul(PDstandardNth23beta3,ToReal(2))))))))))));
      
      JacPDstandardNth12alpha = 
        kmadd(J11L,kmul(J12L,PDstandardNth11alpha),kmadd(J12L,kmul(J21L,PDstandardNth12alpha),kmadd(J11L,kmul(J22L,PDstandardNth12alpha),kmadd(J12L,kmul(J31L,PDstandardNth13alpha),kmadd(J11L,kmul(J32L,PDstandardNth13alpha),kmadd(dJ112L,PDstandardNth1alpha,kmadd(J21L,kmul(J22L,PDstandardNth22alpha),kmadd(J22L,kmul(J31L,PDstandardNth23alpha),kmadd(J21L,kmul(J32L,PDstandardNth23alpha),kmadd(dJ212L,PDstandardNth2alpha,kmadd(J31L,kmul(J32L,PDstandardNth33alpha),kmul(dJ312L,PDstandardNth3alpha))))))))))));
      
      JacPDstandardNth12beta1 = 
        kmadd(J11L,kmul(J12L,PDstandardNth11beta1),kmadd(J12L,kmul(J21L,PDstandardNth12beta1),kmadd(J11L,kmul(J22L,PDstandardNth12beta1),kmadd(J12L,kmul(J31L,PDstandardNth13beta1),kmadd(J11L,kmul(J32L,PDstandardNth13beta1),kmadd(dJ112L,PDstandardNth1beta1,kmadd(J21L,kmul(J22L,PDstandardNth22beta1),kmadd(J22L,kmul(J31L,PDstandardNth23beta1),kmadd(J21L,kmul(J32L,PDstandardNth23beta1),kmadd(dJ212L,PDstandardNth2beta1,kmadd(J31L,kmul(J32L,PDstandardNth33beta1),kmul(dJ312L,PDstandardNth3beta1))))))))))));
      
      JacPDstandardNth12beta2 = 
        kmadd(J11L,kmul(J12L,PDstandardNth11beta2),kmadd(J12L,kmul(J21L,PDstandardNth12beta2),kmadd(J11L,kmul(J22L,PDstandardNth12beta2),kmadd(J12L,kmul(J31L,PDstandardNth13beta2),kmadd(J11L,kmul(J32L,PDstandardNth13beta2),kmadd(dJ112L,PDstandardNth1beta2,kmadd(J21L,kmul(J22L,PDstandardNth22beta2),kmadd(J22L,kmul(J31L,PDstandardNth23beta2),kmadd(J21L,kmul(J32L,PDstandardNth23beta2),kmadd(dJ212L,PDstandardNth2beta2,kmadd(J31L,kmul(J32L,PDstandardNth33beta2),kmul(dJ312L,PDstandardNth3beta2))))))))))));
      
      JacPDstandardNth12beta3 = 
        kmadd(J11L,kmul(J12L,PDstandardNth11beta3),kmadd(J12L,kmul(J21L,PDstandardNth12beta3),kmadd(J11L,kmul(J22L,PDstandardNth12beta3),kmadd(J12L,kmul(J31L,PDstandardNth13beta3),kmadd(J11L,kmul(J32L,PDstandardNth13beta3),kmadd(dJ112L,PDstandardNth1beta3,kmadd(J21L,kmul(J22L,PDstandardNth22beta3),kmadd(J22L,kmul(J31L,PDstandardNth23beta3),kmadd(J21L,kmul(J32L,PDstandardNth23beta3),kmadd(dJ212L,PDstandardNth2beta3,kmadd(J31L,kmul(J32L,PDstandardNth33beta3),kmul(dJ312L,PDstandardNth3beta3))))))))))));
      
      JacPDstandardNth13alpha = 
        kmadd(J11L,kmul(J13L,PDstandardNth11alpha),kmadd(J13L,kmul(J21L,PDstandardNth12alpha),kmadd(J11L,kmul(J23L,PDstandardNth12alpha),kmadd(J13L,kmul(J31L,PDstandardNth13alpha),kmadd(J11L,kmul(J33L,PDstandardNth13alpha),kmadd(dJ113L,PDstandardNth1alpha,kmadd(J21L,kmul(J23L,PDstandardNth22alpha),kmadd(J23L,kmul(J31L,PDstandardNth23alpha),kmadd(J21L,kmul(J33L,PDstandardNth23alpha),kmadd(dJ213L,PDstandardNth2alpha,kmadd(J31L,kmul(J33L,PDstandardNth33alpha),kmul(dJ313L,PDstandardNth3alpha))))))))))));
      
      JacPDstandardNth13beta1 = 
        kmadd(J11L,kmul(J13L,PDstandardNth11beta1),kmadd(J13L,kmul(J21L,PDstandardNth12beta1),kmadd(J11L,kmul(J23L,PDstandardNth12beta1),kmadd(J13L,kmul(J31L,PDstandardNth13beta1),kmadd(J11L,kmul(J33L,PDstandardNth13beta1),kmadd(dJ113L,PDstandardNth1beta1,kmadd(J21L,kmul(J23L,PDstandardNth22beta1),kmadd(J23L,kmul(J31L,PDstandardNth23beta1),kmadd(J21L,kmul(J33L,PDstandardNth23beta1),kmadd(dJ213L,PDstandardNth2beta1,kmadd(J31L,kmul(J33L,PDstandardNth33beta1),kmul(dJ313L,PDstandardNth3beta1))))))))))));
      
      JacPDstandardNth13beta2 = 
        kmadd(J11L,kmul(J13L,PDstandardNth11beta2),kmadd(J13L,kmul(J21L,PDstandardNth12beta2),kmadd(J11L,kmul(J23L,PDstandardNth12beta2),kmadd(J13L,kmul(J31L,PDstandardNth13beta2),kmadd(J11L,kmul(J33L,PDstandardNth13beta2),kmadd(dJ113L,PDstandardNth1beta2,kmadd(J21L,kmul(J23L,PDstandardNth22beta2),kmadd(J23L,kmul(J31L,PDstandardNth23beta2),kmadd(J21L,kmul(J33L,PDstandardNth23beta2),kmadd(dJ213L,PDstandardNth2beta2,kmadd(J31L,kmul(J33L,PDstandardNth33beta2),kmul(dJ313L,PDstandardNth3beta2))))))))))));
      
      JacPDstandardNth13beta3 = 
        kmadd(J11L,kmul(J13L,PDstandardNth11beta3),kmadd(J13L,kmul(J21L,PDstandardNth12beta3),kmadd(J11L,kmul(J23L,PDstandardNth12beta3),kmadd(J13L,kmul(J31L,PDstandardNth13beta3),kmadd(J11L,kmul(J33L,PDstandardNth13beta3),kmadd(dJ113L,PDstandardNth1beta3,kmadd(J21L,kmul(J23L,PDstandardNth22beta3),kmadd(J23L,kmul(J31L,PDstandardNth23beta3),kmadd(J21L,kmul(J33L,PDstandardNth23beta3),kmadd(dJ213L,PDstandardNth2beta3,kmadd(J31L,kmul(J33L,PDstandardNth33beta3),kmul(dJ313L,PDstandardNth3beta3))))))))))));
      
      JacPDstandardNth21alpha = 
        kmadd(J11L,kmul(J12L,PDstandardNth11alpha),kmadd(J12L,kmul(J21L,PDstandardNth12alpha),kmadd(J11L,kmul(J22L,PDstandardNth12alpha),kmadd(J12L,kmul(J31L,PDstandardNth13alpha),kmadd(J11L,kmul(J32L,PDstandardNth13alpha),kmadd(dJ112L,PDstandardNth1alpha,kmadd(J21L,kmul(J22L,PDstandardNth22alpha),kmadd(J22L,kmul(J31L,PDstandardNth23alpha),kmadd(J21L,kmul(J32L,PDstandardNth23alpha),kmadd(dJ212L,PDstandardNth2alpha,kmadd(J31L,kmul(J32L,PDstandardNth33alpha),kmul(dJ312L,PDstandardNth3alpha))))))))))));
      
      JacPDstandardNth21beta1 = 
        kmadd(J11L,kmul(J12L,PDstandardNth11beta1),kmadd(J12L,kmul(J21L,PDstandardNth12beta1),kmadd(J11L,kmul(J22L,PDstandardNth12beta1),kmadd(J12L,kmul(J31L,PDstandardNth13beta1),kmadd(J11L,kmul(J32L,PDstandardNth13beta1),kmadd(dJ112L,PDstandardNth1beta1,kmadd(J21L,kmul(J22L,PDstandardNth22beta1),kmadd(J22L,kmul(J31L,PDstandardNth23beta1),kmadd(J21L,kmul(J32L,PDstandardNth23beta1),kmadd(dJ212L,PDstandardNth2beta1,kmadd(J31L,kmul(J32L,PDstandardNth33beta1),kmul(dJ312L,PDstandardNth3beta1))))))))))));
      
      JacPDstandardNth21beta2 = 
        kmadd(J11L,kmul(J12L,PDstandardNth11beta2),kmadd(J12L,kmul(J21L,PDstandardNth12beta2),kmadd(J11L,kmul(J22L,PDstandardNth12beta2),kmadd(J12L,kmul(J31L,PDstandardNth13beta2),kmadd(J11L,kmul(J32L,PDstandardNth13beta2),kmadd(dJ112L,PDstandardNth1beta2,kmadd(J21L,kmul(J22L,PDstandardNth22beta2),kmadd(J22L,kmul(J31L,PDstandardNth23beta2),kmadd(J21L,kmul(J32L,PDstandardNth23beta2),kmadd(dJ212L,PDstandardNth2beta2,kmadd(J31L,kmul(J32L,PDstandardNth33beta2),kmul(dJ312L,PDstandardNth3beta2))))))))))));
      
      JacPDstandardNth21beta3 = 
        kmadd(J11L,kmul(J12L,PDstandardNth11beta3),kmadd(J12L,kmul(J21L,PDstandardNth12beta3),kmadd(J11L,kmul(J22L,PDstandardNth12beta3),kmadd(J12L,kmul(J31L,PDstandardNth13beta3),kmadd(J11L,kmul(J32L,PDstandardNth13beta3),kmadd(dJ112L,PDstandardNth1beta3,kmadd(J21L,kmul(J22L,PDstandardNth22beta3),kmadd(J22L,kmul(J31L,PDstandardNth23beta3),kmadd(J21L,kmul(J32L,PDstandardNth23beta3),kmadd(dJ212L,PDstandardNth2beta3,kmadd(J31L,kmul(J32L,PDstandardNth33beta3),kmul(dJ312L,PDstandardNth3beta3))))))))))));
      
      JacPDstandardNth23alpha = 
        kmadd(J12L,kmul(J13L,PDstandardNth11alpha),kmadd(J13L,kmul(J22L,PDstandardNth12alpha),kmadd(J12L,kmul(J23L,PDstandardNth12alpha),kmadd(J13L,kmul(J32L,PDstandardNth13alpha),kmadd(J12L,kmul(J33L,PDstandardNth13alpha),kmadd(dJ123L,PDstandardNth1alpha,kmadd(J22L,kmul(J23L,PDstandardNth22alpha),kmadd(J23L,kmul(J32L,PDstandardNth23alpha),kmadd(J22L,kmul(J33L,PDstandardNth23alpha),kmadd(dJ223L,PDstandardNth2alpha,kmadd(J32L,kmul(J33L,PDstandardNth33alpha),kmul(dJ323L,PDstandardNth3alpha))))))))))));
      
      JacPDstandardNth23beta1 = 
        kmadd(J12L,kmul(J13L,PDstandardNth11beta1),kmadd(J13L,kmul(J22L,PDstandardNth12beta1),kmadd(J12L,kmul(J23L,PDstandardNth12beta1),kmadd(J13L,kmul(J32L,PDstandardNth13beta1),kmadd(J12L,kmul(J33L,PDstandardNth13beta1),kmadd(dJ123L,PDstandardNth1beta1,kmadd(J22L,kmul(J23L,PDstandardNth22beta1),kmadd(J23L,kmul(J32L,PDstandardNth23beta1),kmadd(J22L,kmul(J33L,PDstandardNth23beta1),kmadd(dJ223L,PDstandardNth2beta1,kmadd(J32L,kmul(J33L,PDstandardNth33beta1),kmul(dJ323L,PDstandardNth3beta1))))))))))));
      
      JacPDstandardNth23beta2 = 
        kmadd(J12L,kmul(J13L,PDstandardNth11beta2),kmadd(J13L,kmul(J22L,PDstandardNth12beta2),kmadd(J12L,kmul(J23L,PDstandardNth12beta2),kmadd(J13L,kmul(J32L,PDstandardNth13beta2),kmadd(J12L,kmul(J33L,PDstandardNth13beta2),kmadd(dJ123L,PDstandardNth1beta2,kmadd(J22L,kmul(J23L,PDstandardNth22beta2),kmadd(J23L,kmul(J32L,PDstandardNth23beta2),kmadd(J22L,kmul(J33L,PDstandardNth23beta2),kmadd(dJ223L,PDstandardNth2beta2,kmadd(J32L,kmul(J33L,PDstandardNth33beta2),kmul(dJ323L,PDstandardNth3beta2))))))))))));
      
      JacPDstandardNth23beta3 = 
        kmadd(J12L,kmul(J13L,PDstandardNth11beta3),kmadd(J13L,kmul(J22L,PDstandardNth12beta3),kmadd(J12L,kmul(J23L,PDstandardNth12beta3),kmadd(J13L,kmul(J32L,PDstandardNth13beta3),kmadd(J12L,kmul(J33L,PDstandardNth13beta3),kmadd(dJ123L,PDstandardNth1beta3,kmadd(J22L,kmul(J23L,PDstandardNth22beta3),kmadd(J23L,kmul(J32L,PDstandardNth23beta3),kmadd(J22L,kmul(J33L,PDstandardNth23beta3),kmadd(dJ223L,PDstandardNth2beta3,kmadd(J32L,kmul(J33L,PDstandardNth33beta3),kmul(dJ323L,PDstandardNth3beta3))))))))))));
      
      JacPDstandardNth31alpha = 
        kmadd(J11L,kmul(J13L,PDstandardNth11alpha),kmadd(J13L,kmul(J21L,PDstandardNth12alpha),kmadd(J11L,kmul(J23L,PDstandardNth12alpha),kmadd(J13L,kmul(J31L,PDstandardNth13alpha),kmadd(J11L,kmul(J33L,PDstandardNth13alpha),kmadd(dJ113L,PDstandardNth1alpha,kmadd(J21L,kmul(J23L,PDstandardNth22alpha),kmadd(J23L,kmul(J31L,PDstandardNth23alpha),kmadd(J21L,kmul(J33L,PDstandardNth23alpha),kmadd(dJ213L,PDstandardNth2alpha,kmadd(J31L,kmul(J33L,PDstandardNth33alpha),kmul(dJ313L,PDstandardNth3alpha))))))))))));
      
      JacPDstandardNth31beta1 = 
        kmadd(J11L,kmul(J13L,PDstandardNth11beta1),kmadd(J13L,kmul(J21L,PDstandardNth12beta1),kmadd(J11L,kmul(J23L,PDstandardNth12beta1),kmadd(J13L,kmul(J31L,PDstandardNth13beta1),kmadd(J11L,kmul(J33L,PDstandardNth13beta1),kmadd(dJ113L,PDstandardNth1beta1,kmadd(J21L,kmul(J23L,PDstandardNth22beta1),kmadd(J23L,kmul(J31L,PDstandardNth23beta1),kmadd(J21L,kmul(J33L,PDstandardNth23beta1),kmadd(dJ213L,PDstandardNth2beta1,kmadd(J31L,kmul(J33L,PDstandardNth33beta1),kmul(dJ313L,PDstandardNth3beta1))))))))))));
      
      JacPDstandardNth31beta2 = 
        kmadd(J11L,kmul(J13L,PDstandardNth11beta2),kmadd(J13L,kmul(J21L,PDstandardNth12beta2),kmadd(J11L,kmul(J23L,PDstandardNth12beta2),kmadd(J13L,kmul(J31L,PDstandardNth13beta2),kmadd(J11L,kmul(J33L,PDstandardNth13beta2),kmadd(dJ113L,PDstandardNth1beta2,kmadd(J21L,kmul(J23L,PDstandardNth22beta2),kmadd(J23L,kmul(J31L,PDstandardNth23beta2),kmadd(J21L,kmul(J33L,PDstandardNth23beta2),kmadd(dJ213L,PDstandardNth2beta2,kmadd(J31L,kmul(J33L,PDstandardNth33beta2),kmul(dJ313L,PDstandardNth3beta2))))))))))));
      
      JacPDstandardNth31beta3 = 
        kmadd(J11L,kmul(J13L,PDstandardNth11beta3),kmadd(J13L,kmul(J21L,PDstandardNth12beta3),kmadd(J11L,kmul(J23L,PDstandardNth12beta3),kmadd(J13L,kmul(J31L,PDstandardNth13beta3),kmadd(J11L,kmul(J33L,PDstandardNth13beta3),kmadd(dJ113L,PDstandardNth1beta3,kmadd(J21L,kmul(J23L,PDstandardNth22beta3),kmadd(J23L,kmul(J31L,PDstandardNth23beta3),kmadd(J21L,kmul(J33L,PDstandardNth23beta3),kmadd(dJ213L,PDstandardNth2beta3,kmadd(J31L,kmul(J33L,PDstandardNth33beta3),kmul(dJ313L,PDstandardNth3beta3))))))))))));
      
      JacPDstandardNth32alpha = 
        kmadd(J12L,kmul(J13L,PDstandardNth11alpha),kmadd(J13L,kmul(J22L,PDstandardNth12alpha),kmadd(J12L,kmul(J23L,PDstandardNth12alpha),kmadd(J13L,kmul(J32L,PDstandardNth13alpha),kmadd(J12L,kmul(J33L,PDstandardNth13alpha),kmadd(dJ123L,PDstandardNth1alpha,kmadd(J22L,kmul(J23L,PDstandardNth22alpha),kmadd(J23L,kmul(J32L,PDstandardNth23alpha),kmadd(J22L,kmul(J33L,PDstandardNth23alpha),kmadd(dJ223L,PDstandardNth2alpha,kmadd(J32L,kmul(J33L,PDstandardNth33alpha),kmul(dJ323L,PDstandardNth3alpha))))))))))));
      
      JacPDstandardNth32beta1 = 
        kmadd(J12L,kmul(J13L,PDstandardNth11beta1),kmadd(J13L,kmul(J22L,PDstandardNth12beta1),kmadd(J12L,kmul(J23L,PDstandardNth12beta1),kmadd(J13L,kmul(J32L,PDstandardNth13beta1),kmadd(J12L,kmul(J33L,PDstandardNth13beta1),kmadd(dJ123L,PDstandardNth1beta1,kmadd(J22L,kmul(J23L,PDstandardNth22beta1),kmadd(J23L,kmul(J32L,PDstandardNth23beta1),kmadd(J22L,kmul(J33L,PDstandardNth23beta1),kmadd(dJ223L,PDstandardNth2beta1,kmadd(J32L,kmul(J33L,PDstandardNth33beta1),kmul(dJ323L,PDstandardNth3beta1))))))))))));
      
      JacPDstandardNth32beta2 = 
        kmadd(J12L,kmul(J13L,PDstandardNth11beta2),kmadd(J13L,kmul(J22L,PDstandardNth12beta2),kmadd(J12L,kmul(J23L,PDstandardNth12beta2),kmadd(J13L,kmul(J32L,PDstandardNth13beta2),kmadd(J12L,kmul(J33L,PDstandardNth13beta2),kmadd(dJ123L,PDstandardNth1beta2,kmadd(J22L,kmul(J23L,PDstandardNth22beta2),kmadd(J23L,kmul(J32L,PDstandardNth23beta2),kmadd(J22L,kmul(J33L,PDstandardNth23beta2),kmadd(dJ223L,PDstandardNth2beta2,kmadd(J32L,kmul(J33L,PDstandardNth33beta2),kmul(dJ323L,PDstandardNth3beta2))))))))))));
      
      JacPDstandardNth32beta3 = 
        kmadd(J12L,kmul(J13L,PDstandardNth11beta3),kmadd(J13L,kmul(J22L,PDstandardNth12beta3),kmadd(J12L,kmul(J23L,PDstandardNth12beta3),kmadd(J13L,kmul(J32L,PDstandardNth13beta3),kmadd(J12L,kmul(J33L,PDstandardNth13beta3),kmadd(dJ123L,PDstandardNth1beta3,kmadd(J22L,kmul(J23L,PDstandardNth22beta3),kmadd(J23L,kmul(J32L,PDstandardNth23beta3),kmadd(J22L,kmul(J33L,PDstandardNth23beta3),kmadd(dJ223L,PDstandardNth2beta3,kmadd(J32L,kmul(J33L,PDstandardNth33beta3),kmul(dJ323L,PDstandardNth3beta3))))))))))));
    }
    else
    {
      JacPDstandardNth1alpha = PDstandardNth1alpha;
      
      JacPDstandardNth1beta1 = PDstandardNth1beta1;
      
      JacPDstandardNth1beta2 = PDstandardNth1beta2;
      
      JacPDstandardNth1beta3 = PDstandardNth1beta3;
      
      JacPDstandardNth1gt11 = PDstandardNth1gt11;
      
      JacPDstandardNth1gt12 = PDstandardNth1gt12;
      
      JacPDstandardNth1gt13 = PDstandardNth1gt13;
      
      JacPDstandardNth1gt22 = PDstandardNth1gt22;
      
      JacPDstandardNth1gt23 = PDstandardNth1gt23;
      
      JacPDstandardNth1gt33 = PDstandardNth1gt33;
      
      JacPDstandardNth1phi = PDstandardNth1phi;
      
      JacPDstandardNth1trK = PDstandardNth1trK;
      
      JacPDstandardNth2alpha = PDstandardNth2alpha;
      
      JacPDstandardNth2beta1 = PDstandardNth2beta1;
      
      JacPDstandardNth2beta2 = PDstandardNth2beta2;
      
      JacPDstandardNth2beta3 = PDstandardNth2beta3;
      
      JacPDstandardNth2gt11 = PDstandardNth2gt11;
      
      JacPDstandardNth2gt12 = PDstandardNth2gt12;
      
      JacPDstandardNth2gt13 = PDstandardNth2gt13;
      
      JacPDstandardNth2gt22 = PDstandardNth2gt22;
      
      JacPDstandardNth2gt23 = PDstandardNth2gt23;
      
      JacPDstandardNth2gt33 = PDstandardNth2gt33;
      
      JacPDstandardNth2phi = PDstandardNth2phi;
      
      JacPDstandardNth2trK = PDstandardNth2trK;
      
      JacPDstandardNth3alpha = PDstandardNth3alpha;
      
      JacPDstandardNth3beta1 = PDstandardNth3beta1;
      
      JacPDstandardNth3beta2 = PDstandardNth3beta2;
      
      JacPDstandardNth3beta3 = PDstandardNth3beta3;
      
      JacPDstandardNth3gt11 = PDstandardNth3gt11;
      
      JacPDstandardNth3gt12 = PDstandardNth3gt12;
      
      JacPDstandardNth3gt13 = PDstandardNth3gt13;
      
      JacPDstandardNth3gt22 = PDstandardNth3gt22;
      
      JacPDstandardNth3gt23 = PDstandardNth3gt23;
      
      JacPDstandardNth3gt33 = PDstandardNth3gt33;
      
      JacPDstandardNth3phi = PDstandardNth3phi;
      
      JacPDstandardNth3trK = PDstandardNth3trK;
      
      JacPDstandardNth11alpha = PDstandardNth11alpha;
      
      JacPDstandardNth11beta1 = PDstandardNth11beta1;
      
      JacPDstandardNth11beta2 = PDstandardNth11beta2;
      
      JacPDstandardNth11beta3 = PDstandardNth11beta3;
      
      JacPDstandardNth22alpha = PDstandardNth22alpha;
      
      JacPDstandardNth22beta1 = PDstandardNth22beta1;
      
      JacPDstandardNth22beta2 = PDstandardNth22beta2;
      
      JacPDstandardNth22beta3 = PDstandardNth22beta3;
      
      JacPDstandardNth33alpha = PDstandardNth33alpha;
      
      JacPDstandardNth33beta1 = PDstandardNth33beta1;
      
      JacPDstandardNth33beta2 = PDstandardNth33beta2;
      
      JacPDstandardNth33beta3 = PDstandardNth33beta3;
      
      JacPDstandardNth12alpha = PDstandardNth12alpha;
      
      JacPDstandardNth12beta1 = PDstandardNth12beta1;
      
      JacPDstandardNth12beta2 = PDstandardNth12beta2;
      
      JacPDstandardNth12beta3 = PDstandardNth12beta3;
      
      JacPDstandardNth13alpha = PDstandardNth13alpha;
      
      JacPDstandardNth13beta1 = PDstandardNth13beta1;
      
      JacPDstandardNth13beta2 = PDstandardNth13beta2;
      
      JacPDstandardNth13beta3 = PDstandardNth13beta3;
      
      JacPDstandardNth21alpha = PDstandardNth12alpha;
      
      JacPDstandardNth21beta1 = PDstandardNth12beta1;
      
      JacPDstandardNth21beta2 = PDstandardNth12beta2;
      
      JacPDstandardNth21beta3 = PDstandardNth12beta3;
      
      JacPDstandardNth23alpha = PDstandardNth23alpha;
      
      JacPDstandardNth23beta1 = PDstandardNth23beta1;
      
      JacPDstandardNth23beta2 = PDstandardNth23beta2;
      
      JacPDstandardNth23beta3 = PDstandardNth23beta3;
      
      JacPDstandardNth31alpha = PDstandardNth13alpha;
      
      JacPDstandardNth31beta1 = PDstandardNth13beta1;
      
      JacPDstandardNth31beta2 = PDstandardNth13beta2;
      
      JacPDstandardNth31beta3 = PDstandardNth13beta3;
      
      JacPDstandardNth32alpha = PDstandardNth23alpha;
      
      JacPDstandardNth32beta1 = PDstandardNth23beta1;
      
      JacPDstandardNth32beta2 = PDstandardNth23beta2;
      
      JacPDstandardNth32beta3 = PDstandardNth23beta3;
    }
    
    CCTK_REAL detgt CCTK_ATTRIBUTE_UNUSED = ToReal(1);
    
    CCTK_REAL gtu11 CCTK_ATTRIBUTE_UNUSED = 
      kdiv(kmsub(gt22L,gt33L,kmul(gt23L,gt23L)),detgt);
    
    CCTK_REAL gtu12 CCTK_ATTRIBUTE_UNUSED = 
      kdiv(kmsub(gt13L,gt23L,kmul(gt12L,gt33L)),detgt);
    
    CCTK_REAL gtu13 CCTK_ATTRIBUTE_UNUSED = 
      kdiv(kmsub(gt12L,gt23L,kmul(gt13L,gt22L)),detgt);
    
    CCTK_REAL gtu22 CCTK_ATTRIBUTE_UNUSED = 
      kdiv(kmsub(gt11L,gt33L,kmul(gt13L,gt13L)),detgt);
    
    CCTK_REAL gtu23 CCTK_ATTRIBUTE_UNUSED = 
      kdiv(kmsub(gt12L,gt13L,kmul(gt11L,gt23L)),detgt);
    
    CCTK_REAL gtu33 CCTK_ATTRIBUTE_UNUSED = 
      kdiv(kmsub(gt11L,gt22L,kmul(gt12L,gt12L)),detgt);
    
    CCTK_REAL Gtl111 CCTK_ATTRIBUTE_UNUSED = 
      kmul(JacPDstandardNth1gt11,ToReal(0.5));
    
    CCTK_REAL Gtl112 CCTK_ATTRIBUTE_UNUSED = 
      kmul(JacPDstandardNth2gt11,ToReal(0.5));
    
    CCTK_REAL Gtl113 CCTK_ATTRIBUTE_UNUSED = 
      kmul(JacPDstandardNth3gt11,ToReal(0.5));
    
    CCTK_REAL Gtl122 CCTK_ATTRIBUTE_UNUSED = 
      kmul(ToReal(0.5),kmsub(JacPDstandardNth2gt12,ToReal(2),JacPDstandardNth1gt22));
    
    CCTK_REAL Gtl123 CCTK_ATTRIBUTE_UNUSED = 
      kmul(kadd(JacPDstandardNth2gt13,ksub(JacPDstandardNth3gt12,JacPDstandardNth1gt23)),ToReal(0.5));
    
    CCTK_REAL Gtl133 CCTK_ATTRIBUTE_UNUSED = 
      kmul(ToReal(0.5),kmsub(JacPDstandardNth3gt13,ToReal(2),JacPDstandardNth1gt33));
    
    CCTK_REAL Gtl211 CCTK_ATTRIBUTE_UNUSED = 
      kmul(ToReal(0.5),kmsub(JacPDstandardNth1gt12,ToReal(2),JacPDstandardNth2gt11));
    
    CCTK_REAL Gtl212 CCTK_ATTRIBUTE_UNUSED = 
      kmul(JacPDstandardNth1gt22,ToReal(0.5));
    
    CCTK_REAL Gtl213 CCTK_ATTRIBUTE_UNUSED = 
      kmul(kadd(JacPDstandardNth1gt23,ksub(JacPDstandardNth3gt12,JacPDstandardNth2gt13)),ToReal(0.5));
    
    CCTK_REAL Gtl222 CCTK_ATTRIBUTE_UNUSED = 
      kmul(JacPDstandardNth2gt22,ToReal(0.5));
    
    CCTK_REAL Gtl223 CCTK_ATTRIBUTE_UNUSED = 
      kmul(JacPDstandardNth3gt22,ToReal(0.5));
    
    CCTK_REAL Gtl233 CCTK_ATTRIBUTE_UNUSED = 
      kmul(ToReal(0.5),kmsub(JacPDstandardNth3gt23,ToReal(2),JacPDstandardNth2gt33));
    
    CCTK_REAL Gtl311 CCTK_ATTRIBUTE_UNUSED = 
      kmul(ToReal(0.5),kmsub(JacPDstandardNth1gt13,ToReal(2),JacPDstandardNth3gt11));
    
    CCTK_REAL Gtl312 CCTK_ATTRIBUTE_UNUSED = 
      kmul(kadd(JacPDstandardNth1gt23,ksub(JacPDstandardNth2gt13,JacPDstandardNth3gt12)),ToReal(0.5));
    
    CCTK_REAL Gtl313 CCTK_ATTRIBUTE_UNUSED = 
      kmul(JacPDstandardNth1gt33,ToReal(0.5));
    
    CCTK_REAL Gtl322 CCTK_ATTRIBUTE_UNUSED = 
      kmul(ToReal(0.5),kmsub(JacPDstandardNth2gt23,ToReal(2),JacPDstandardNth3gt22));
    
    CCTK_REAL Gtl323 CCTK_ATTRIBUTE_UNUSED = 
      kmul(JacPDstandardNth2gt33,ToReal(0.5));
    
    CCTK_REAL Gtl333 CCTK_ATTRIBUTE_UNUSED = 
      kmul(JacPDstandardNth3gt33,ToReal(0.5));
    
    CCTK_REAL Gt111 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl111,gtu11,kmadd(Gtl211,gtu12,kmul(Gtl311,gtu13)));
    
    CCTK_REAL Gt211 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl111,gtu12,kmadd(Gtl211,gtu22,kmul(Gtl311,gtu23)));
    
    CCTK_REAL Gt311 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl111,gtu13,kmadd(Gtl211,gtu23,kmul(Gtl311,gtu33)));
    
    CCTK_REAL Gt112 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl112,gtu11,kmadd(Gtl212,gtu12,kmul(Gtl312,gtu13)));
    
    CCTK_REAL Gt212 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl112,gtu12,kmadd(Gtl212,gtu22,kmul(Gtl312,gtu23)));
    
    CCTK_REAL Gt312 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl112,gtu13,kmadd(Gtl212,gtu23,kmul(Gtl312,gtu33)));
    
    CCTK_REAL Gt113 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl113,gtu11,kmadd(Gtl213,gtu12,kmul(Gtl313,gtu13)));
    
    CCTK_REAL Gt213 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl113,gtu12,kmadd(Gtl213,gtu22,kmul(Gtl313,gtu23)));
    
    CCTK_REAL Gt313 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl113,gtu13,kmadd(Gtl213,gtu23,kmul(Gtl313,gtu33)));
    
    CCTK_REAL Gt122 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl122,gtu11,kmadd(Gtl222,gtu12,kmul(Gtl322,gtu13)));
    
    CCTK_REAL Gt222 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl122,gtu12,kmadd(Gtl222,gtu22,kmul(Gtl322,gtu23)));
    
    CCTK_REAL Gt322 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl122,gtu13,kmadd(Gtl222,gtu23,kmul(Gtl322,gtu33)));
    
    CCTK_REAL Gt123 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl123,gtu11,kmadd(Gtl223,gtu12,kmul(Gtl323,gtu13)));
    
    CCTK_REAL Gt223 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl123,gtu12,kmadd(Gtl223,gtu22,kmul(Gtl323,gtu23)));
    
    CCTK_REAL Gt323 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl123,gtu13,kmadd(Gtl223,gtu23,kmul(Gtl323,gtu33)));
    
    CCTK_REAL Gt133 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl133,gtu11,kmadd(Gtl233,gtu12,kmul(Gtl333,gtu13)));
    
    CCTK_REAL Gt233 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl133,gtu12,kmadd(Gtl233,gtu22,kmul(Gtl333,gtu23)));
    
    CCTK_REAL Gt333 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gtl133,gtu13,kmadd(Gtl233,gtu23,kmul(Gtl333,gtu33)));
    
    CCTK_REAL Xtn1 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gt111,gtu11,kmadd(Gt122,gtu22,kmadd(Gt133,gtu33,kmadd(Gt112,kmul(gtu12,ToReal(2)),kmadd(Gt113,kmul(gtu13,ToReal(2)),kmul(Gt123,kmul(gtu23,ToReal(2))))))));
    
    CCTK_REAL Xtn2 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gt211,gtu11,kmadd(Gt222,gtu22,kmadd(Gt233,gtu33,kmadd(Gt212,kmul(gtu12,ToReal(2)),kmadd(Gt213,kmul(gtu13,ToReal(2)),kmul(Gt223,kmul(gtu23,ToReal(2))))))));
    
    CCTK_REAL Xtn3 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Gt311,gtu11,kmadd(Gt322,gtu22,kmadd(Gt333,gtu33,kmadd(Gt312,kmul(gtu12,ToReal(2)),kmadd(Gt313,kmul(gtu13,ToReal(2)),kmul(Gt323,kmul(gtu23,ToReal(2))))))));
    
    CCTK_REAL e4phi CCTK_ATTRIBUTE_UNUSED = IfThen(conformalMethod == 
      1,kdiv(ToReal(1),kmul(phiL,phiL)),kexp(kmul(phiL,ToReal(4))));
    
    CCTK_REAL em4phi CCTK_ATTRIBUTE_UNUSED = kdiv(ToReal(1),e4phi);
    
    CCTK_REAL fac1 CCTK_ATTRIBUTE_UNUSED = IfThen(conformalMethod == 
      1,kdiv(ToReal(-0.5),phiL),ToReal(1));
    
    CCTK_REAL cdphi1 CCTK_ATTRIBUTE_UNUSED = 
      kmul(fac1,JacPDstandardNth1phi);
    
    CCTK_REAL cdphi2 CCTK_ATTRIBUTE_UNUSED = 
      kmul(fac1,JacPDstandardNth2phi);
    
    CCTK_REAL cdphi3 CCTK_ATTRIBUTE_UNUSED = 
      kmul(fac1,JacPDstandardNth3phi);
    
    CCTK_REAL Atm11 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(At11L,gtu11,kmadd(At12L,gtu12,kmul(At13L,gtu13)));
    
    CCTK_REAL Atm21 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(At11L,gtu12,kmadd(At12L,gtu22,kmul(At13L,gtu23)));
    
    CCTK_REAL Atm31 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(At11L,gtu13,kmadd(At12L,gtu23,kmul(At13L,gtu33)));
    
    CCTK_REAL Atm12 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(At12L,gtu11,kmadd(At22L,gtu12,kmul(At23L,gtu13)));
    
    CCTK_REAL Atm22 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(At12L,gtu12,kmadd(At22L,gtu22,kmul(At23L,gtu23)));
    
    CCTK_REAL Atm32 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(At12L,gtu13,kmadd(At22L,gtu23,kmul(At23L,gtu33)));
    
    CCTK_REAL Atm13 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(At13L,gtu11,kmadd(At23L,gtu12,kmul(At33L,gtu13)));
    
    CCTK_REAL Atm23 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(At13L,gtu12,kmadd(At23L,gtu22,kmul(At33L,gtu23)));
    
    CCTK_REAL Atm33 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(At13L,gtu13,kmadd(At23L,gtu23,kmul(At33L,gtu33)));
    
    CCTK_REAL Atu11 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Atm11,gtu11,kmadd(Atm12,gtu12,kmul(Atm13,gtu13)));
    
    CCTK_REAL Atu12 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Atm11,gtu12,kmadd(Atm12,gtu22,kmul(Atm13,gtu23)));
    
    CCTK_REAL Atu13 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Atm11,gtu13,kmadd(Atm12,gtu23,kmul(Atm13,gtu33)));
    
    CCTK_REAL Atu22 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Atm21,gtu12,kmadd(Atm22,gtu22,kmul(Atm23,gtu23)));
    
    CCTK_REAL Atu23 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Atm21,gtu13,kmadd(Atm22,gtu23,kmul(Atm23,gtu33)));
    
    CCTK_REAL Atu33 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(Atm31,gtu13,kmadd(Atm32,gtu23,kmul(Atm33,gtu33)));
    
    CCTK_REAL rho CCTK_ATTRIBUTE_UNUSED = 
      kdiv(kadd(eTttL,kmadd(beta1L,kmadd(beta1L,eTxxL,kmadd(beta2L,eTxyL,kmul(beta3L,eTxzL))),kmadd(beta2L,kmadd(beta1L,eTxyL,kmadd(beta2L,eTyyL,kmul(beta3L,eTyzL))),kmadd(beta3L,kmadd(beta1L,eTxzL,kmadd(beta2L,eTyzL,kmul(beta3L,eTzzL))),kmul(kmadd(beta1L,eTtxL,kmadd(beta2L,eTtyL,kmul(beta3L,eTtzL))),ToReal(-2)))))),kmul(alphaL,alphaL));
    
    CCTK_REAL S1 CCTK_ATTRIBUTE_UNUSED = 
      kneg(kdiv(ksub(eTtxL,kmadd(beta1L,eTxxL,kmadd(beta3L,eTxzL,kmul(beta2L,eTxyL)))),alphaL));
    
    CCTK_REAL S2 CCTK_ATTRIBUTE_UNUSED = 
      kneg(kdiv(ksub(eTtyL,kmadd(beta1L,eTxyL,kmadd(beta3L,eTyzL,kmul(beta2L,eTyyL)))),alphaL));
    
    CCTK_REAL S3 CCTK_ATTRIBUTE_UNUSED = 
      kneg(kdiv(ksub(eTtzL,kmadd(beta1L,eTxzL,kmadd(beta3L,eTzzL,kmul(beta2L,eTyzL)))),alphaL));
    
    CCTK_REAL trS CCTK_ATTRIBUTE_UNUSED = 
      kmul(em4phi,kmadd(eTxxL,gtu11,kmadd(eTyyL,gtu22,kmadd(eTzzL,gtu33,kmadd(eTxyL,kmul(gtu12,ToReal(2)),kmadd(eTxzL,kmul(gtu13,ToReal(2)),kmul(eTyzL,kmul(gtu23,ToReal(2)))))))));
    
    CCTK_REAL phirhsL CCTK_ATTRIBUTE_UNUSED = kmul(IfThen(conformalMethod 
      == 
      1,kmul(phiL,ToReal(0.333333333333333333333333333333)),ToReal(-0.166666666666666666666666666667)),kmsub(alphaL,trKL,kadd(kadd(JacPDstandardNth3beta3,JacPDstandardNth2beta2),JacPDstandardNth1beta1)));
    
    CCTK_REAL gt11rhsL CCTK_ATTRIBUTE_UNUSED = 
      kmadd(alphaL,kmul(At11L,ToReal(-2)),kmadd(gt11L,kmul(kadd(JacPDstandardNth1beta1,kadd(JacPDstandardNth2beta2,JacPDstandardNth3beta3)),ToReal(-0.666666666666666666666666666667)),kmadd(gt11L,kmul(JacPDstandardNth1beta1,ToReal(2)),kmadd(gt12L,kmul(JacPDstandardNth1beta2,ToReal(2)),kmul(gt13L,kmul(JacPDstandardNth1beta3,ToReal(2)))))));
    
    CCTK_REAL gt12rhsL CCTK_ATTRIBUTE_UNUSED = 
      kmadd(gt12L,JacPDstandardNth1beta1,kmadd(gt22L,JacPDstandardNth1beta2,kmadd(gt23L,JacPDstandardNth1beta3,kmadd(gt11L,JacPDstandardNth2beta1,kmadd(gt12L,JacPDstandardNth2beta2,kmadd(gt13L,JacPDstandardNth2beta3,kmadd(alphaL,kmul(At12L,ToReal(-2)),kmul(gt12L,kmul(kadd(JacPDstandardNth1beta1,kadd(JacPDstandardNth2beta2,JacPDstandardNth3beta3)),ToReal(-0.666666666666666666666666666667))))))))));
    
    CCTK_REAL gt13rhsL CCTK_ATTRIBUTE_UNUSED = 
      kmadd(gt13L,JacPDstandardNth1beta1,kmadd(gt23L,JacPDstandardNth1beta2,kmadd(gt33L,JacPDstandardNth1beta3,kmadd(gt11L,JacPDstandardNth3beta1,kmadd(gt12L,JacPDstandardNth3beta2,kmadd(gt13L,JacPDstandardNth3beta3,kmadd(alphaL,kmul(At13L,ToReal(-2)),kmul(gt13L,kmul(kadd(JacPDstandardNth1beta1,kadd(JacPDstandardNth2beta2,JacPDstandardNth3beta3)),ToReal(-0.666666666666666666666666666667))))))))));
    
    CCTK_REAL gt22rhsL CCTK_ATTRIBUTE_UNUSED = 
      kmadd(alphaL,kmul(At22L,ToReal(-2)),kmadd(gt22L,kmul(kadd(JacPDstandardNth1beta1,kadd(JacPDstandardNth2beta2,JacPDstandardNth3beta3)),ToReal(-0.666666666666666666666666666667)),kmadd(gt12L,kmul(JacPDstandardNth2beta1,ToReal(2)),kmadd(gt22L,kmul(JacPDstandardNth2beta2,ToReal(2)),kmul(gt23L,kmul(JacPDstandardNth2beta3,ToReal(2)))))));
    
    CCTK_REAL gt23rhsL CCTK_ATTRIBUTE_UNUSED = 
      kmadd(gt13L,JacPDstandardNth2beta1,kmadd(gt23L,JacPDstandardNth2beta2,kmadd(gt33L,JacPDstandardNth2beta3,kmadd(gt12L,JacPDstandardNth3beta1,kmadd(gt22L,JacPDstandardNth3beta2,kmadd(gt23L,JacPDstandardNth3beta3,kmadd(alphaL,kmul(At23L,ToReal(-2)),kmul(gt23L,kmul(kadd(JacPDstandardNth1beta1,kadd(JacPDstandardNth2beta2,JacPDstandardNth3beta3)),ToReal(-0.666666666666666666666666666667))))))))));
    
    CCTK_REAL gt33rhsL CCTK_ATTRIBUTE_UNUSED = 
      kmadd(alphaL,kmul(At33L,ToReal(-2)),kmadd(gt33L,kmul(kadd(JacPDstandardNth1beta1,kadd(JacPDstandardNth2beta2,JacPDstandardNth3beta3)),ToReal(-0.666666666666666666666666666667)),kmadd(gt13L,kmul(JacPDstandardNth3beta1,ToReal(2)),kmadd(gt23L,kmul(JacPDstandardNth3beta2,ToReal(2)),kmul(gt33L,kmul(JacPDstandardNth3beta3,ToReal(2)))))));
    
    CCTK_REAL dotXt1 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(gtu11,JacPDstandardNth11beta1,kmadd(gtu12,JacPDstandardNth12beta1,kmadd(gtu13,JacPDstandardNth13beta1,kmadd(gtu12,JacPDstandardNth21beta1,kmadd(gtu22,JacPDstandardNth22beta1,kmadd(gtu23,JacPDstandardNth23beta1,kmadd(gtu13,JacPDstandardNth31beta1,kmadd(gtu23,JacPDstandardNth32beta1,kmadd(gtu33,JacPDstandardNth33beta1,kmadd(kmadd(Atu11,JacPDstandardNth1alpha,kmadd(Atu12,JacPDstandardNth2alpha,kmul(Atu13,JacPDstandardNth3alpha))),ToReal(-2),knmsub(JacPDstandardNth1beta1,Xtn1,knmsub(JacPDstandardNth2beta1,Xtn2,knmsub(JacPDstandardNth3beta1,Xtn3,kmadd(kmadd(gtu11,kadd(JacPDstandardNth11beta1,kadd(JacPDstandardNth12beta2,JacPDstandardNth13beta3)),kmadd(gtu12,kadd(JacPDstandardNth21beta1,kadd(JacPDstandardNth22beta2,JacPDstandardNth23beta3)),kmul(gtu13,kadd(JacPDstandardNth31beta1,kadd(JacPDstandardNth32beta2,JacPDstandardNth33beta3))))),ToReal(0.333333333333333333333333333333),kmadd(kadd(JacPDstandardNth1beta1,kadd(JacPDstandardNth2beta2,JacPDstandardNth3beta3)),kmul(Xtn1,ToReal(0.666666666666666666666666666667)),kmadd(alphaL,kmul(ToReal(2),kmadd(Atu11,Gt111,kmadd(Atu22,Gt122,kmadd(Atu33,Gt133,kmadd(kmadd(gtu11,JacPDstandardNth1trK,kmadd(gtu12,JacPDstandardNth2trK,kmul(gtu13,JacPDstandardNth3trK))),ToReal(-0.666666666666666666666666666667),kmadd(Atu12,kmul(Gt112,ToReal(2)),kmadd(Atu13,kmul(Gt113,ToReal(2)),kmadd(Atu23,kmul(Gt123,ToReal(2)),kmul(kmadd(Atu11,cdphi1,kmadd(Atu12,cdphi2,kmul(Atu13,cdphi3))),ToReal(6)))))))))),kmul(alphaL,kmul(kmadd(gtu11,S1,kmadd(gtu12,S2,kmul(gtu13,S3))),ToReal(-50.2654824574366918154022941325)))))))))))))))))));
    
    CCTK_REAL dotXt2 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(gtu11,JacPDstandardNth11beta2,kmadd(gtu12,JacPDstandardNth12beta2,kmadd(gtu13,JacPDstandardNth13beta2,kmadd(gtu12,JacPDstandardNth21beta2,kmadd(gtu22,JacPDstandardNth22beta2,kmadd(gtu23,JacPDstandardNth23beta2,kmadd(gtu13,JacPDstandardNth31beta2,kmadd(gtu23,JacPDstandardNth32beta2,kmadd(gtu33,JacPDstandardNth33beta2,kmadd(kmadd(Atu12,JacPDstandardNth1alpha,kmadd(Atu22,JacPDstandardNth2alpha,kmul(Atu23,JacPDstandardNth3alpha))),ToReal(-2),knmsub(JacPDstandardNth1beta2,Xtn1,knmsub(JacPDstandardNth2beta2,Xtn2,knmsub(JacPDstandardNth3beta2,Xtn3,kmadd(kmadd(gtu12,kadd(JacPDstandardNth11beta1,kadd(JacPDstandardNth12beta2,JacPDstandardNth13beta3)),kmadd(gtu22,kadd(JacPDstandardNth21beta1,kadd(JacPDstandardNth22beta2,JacPDstandardNth23beta3)),kmul(gtu23,kadd(JacPDstandardNth31beta1,kadd(JacPDstandardNth32beta2,JacPDstandardNth33beta3))))),ToReal(0.333333333333333333333333333333),kmadd(kadd(JacPDstandardNth1beta1,kadd(JacPDstandardNth2beta2,JacPDstandardNth3beta3)),kmul(Xtn2,ToReal(0.666666666666666666666666666667)),kmadd(alphaL,kmul(ToReal(2),kmadd(Atu11,Gt211,kmadd(Atu22,Gt222,kmadd(Atu33,Gt233,kmadd(kmadd(gtu12,JacPDstandardNth1trK,kmadd(gtu22,JacPDstandardNth2trK,kmul(gtu23,JacPDstandardNth3trK))),ToReal(-0.666666666666666666666666666667),kmadd(Atu12,kmul(Gt212,ToReal(2)),kmadd(Atu13,kmul(Gt213,ToReal(2)),kmadd(Atu23,kmul(Gt223,ToReal(2)),kmul(kmadd(Atu12,cdphi1,kmadd(Atu22,cdphi2,kmul(Atu23,cdphi3))),ToReal(6)))))))))),kmul(alphaL,kmul(kmadd(gtu12,S1,kmadd(gtu22,S2,kmul(gtu23,S3))),ToReal(-50.2654824574366918154022941325)))))))))))))))))));
    
    CCTK_REAL dotXt3 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(gtu11,JacPDstandardNth11beta3,kmadd(gtu12,JacPDstandardNth12beta3,kmadd(gtu13,JacPDstandardNth13beta3,kmadd(gtu12,JacPDstandardNth21beta3,kmadd(gtu22,JacPDstandardNth22beta3,kmadd(gtu23,JacPDstandardNth23beta3,kmadd(gtu13,JacPDstandardNth31beta3,kmadd(gtu23,JacPDstandardNth32beta3,kmadd(gtu33,JacPDstandardNth33beta3,kmadd(kmadd(Atu13,JacPDstandardNth1alpha,kmadd(Atu23,JacPDstandardNth2alpha,kmul(Atu33,JacPDstandardNth3alpha))),ToReal(-2),knmsub(JacPDstandardNth1beta3,Xtn1,knmsub(JacPDstandardNth2beta3,Xtn2,knmsub(JacPDstandardNth3beta3,Xtn3,kmadd(kmadd(gtu13,kadd(JacPDstandardNth11beta1,kadd(JacPDstandardNth12beta2,JacPDstandardNth13beta3)),kmadd(gtu23,kadd(JacPDstandardNth21beta1,kadd(JacPDstandardNth22beta2,JacPDstandardNth23beta3)),kmul(gtu33,kadd(JacPDstandardNth31beta1,kadd(JacPDstandardNth32beta2,JacPDstandardNth33beta3))))),ToReal(0.333333333333333333333333333333),kmadd(kadd(JacPDstandardNth1beta1,kadd(JacPDstandardNth2beta2,JacPDstandardNth3beta3)),kmul(Xtn3,ToReal(0.666666666666666666666666666667)),kmadd(alphaL,kmul(ToReal(2),kmadd(Atu11,Gt311,kmadd(Atu22,Gt322,kmadd(Atu33,Gt333,kmadd(kmadd(gtu13,JacPDstandardNth1trK,kmadd(gtu23,JacPDstandardNth2trK,kmul(gtu33,JacPDstandardNth3trK))),ToReal(-0.666666666666666666666666666667),kmadd(Atu12,kmul(Gt312,ToReal(2)),kmadd(Atu13,kmul(Gt313,ToReal(2)),kmadd(Atu23,kmul(Gt323,ToReal(2)),kmul(kmadd(Atu13,cdphi1,kmadd(Atu23,cdphi2,kmul(Atu33,cdphi3))),ToReal(6)))))))))),kmul(alphaL,kmul(kmadd(gtu13,S1,kmadd(gtu23,S2,kmul(gtu33,S3))),ToReal(-50.2654824574366918154022941325)))))))))))))))))));
    
    CCTK_REAL Xt1rhsL CCTK_ATTRIBUTE_UNUSED = dotXt1;
    
    CCTK_REAL Xt2rhsL CCTK_ATTRIBUTE_UNUSED = dotXt2;
    
    CCTK_REAL Xt3rhsL CCTK_ATTRIBUTE_UNUSED = dotXt3;
    
    CCTK_REAL dottrK CCTK_ATTRIBUTE_UNUSED = 
      kmadd(alphaL,kmadd(Atm11,Atm11,kmadd(Atm22,Atm22,kmadd(Atm33,Atm33,kmadd(kmul(trKL,trKL),ToReal(0.333333333333333333333333333333),kmadd(Atm12,kmul(Atm21,ToReal(2)),kmadd(Atm13,kmul(Atm31,ToReal(2)),kmul(Atm23,kmul(Atm32,ToReal(2))))))))),kmsub(alphaL,kmul(kadd(rho,trS),ToReal(12.5663706143591729538505735331)),kmul(em4phi,knmsub(JacPDstandardNth1alpha,Xtn1,knmsub(JacPDstandardNth2alpha,Xtn2,knmsub(JacPDstandardNth3alpha,Xtn3,kmadd(gtu11,kmadd(cdphi1,kmul(JacPDstandardNth1alpha,ToReal(2)),JacPDstandardNth11alpha),kmadd(gtu12,kmadd(cdphi2,kmul(JacPDstandardNth1alpha,ToReal(2)),JacPDstandardNth21alpha),kmadd(gtu13,kmadd(cdphi3,kmul(JacPDstandardNth1alpha,ToReal(2)),JacPDstandardNth31alpha),kmadd(gtu12,kmadd(cdphi1,kmul(JacPDstandardNth2alpha,ToReal(2)),JacPDstandardNth12alpha),kmadd(gtu22,kmadd(cdphi2,kmul(JacPDstandardNth2alpha,ToReal(2)),JacPDstandardNth22alpha),kmadd(gtu23,kmadd(cdphi3,kmul(JacPDstandardNth2alpha,ToReal(2)),JacPDstandardNth32alpha),kmadd(gtu13,kmadd(cdphi1,kmul(JacPDstandardNth3alpha,ToReal(2)),JacPDstandardNth13alpha),kmadd(gtu23,kmadd(cdphi2,kmul(JacPDstandardNth3alpha,ToReal(2)),JacPDstandardNth23alpha),kmul(gtu33,kmadd(cdphi3,kmul(JacPDstandardNth3alpha,ToReal(2)),JacPDstandardNth33alpha))))))))))))))));
    
    CCTK_REAL trKrhsL CCTK_ATTRIBUTE_UNUSED = dottrK;
    
    CCTK_REAL alpharhsL CCTK_ATTRIBUTE_UNUSED = 
      kneg(kmul(kpow(alphaL,harmonicN),kmul(ToReal(harmonicF),kmadd(AL,ToReal(LapseACoeff),kmul(kmadd(kadd(alphaL,ToReal(-1)),ToReal(AlphaDriver),trKL),ToReal(1 
      - LapseACoeff))))));
    
    CCTK_REAL ArhsL CCTK_ATTRIBUTE_UNUSED = 
      kmul(knmsub(AL,ToReal(AlphaDriver),dottrK),ToReal(LapseACoeff));
    
    CCTK_REAL eta CCTK_ATTRIBUTE_UNUSED = 
      kdiv(ToReal(SpatialBetaDriverRadius),kfmax(rL,ToReal(SpatialBetaDriverRadius)));
    
    CCTK_REAL theta CCTK_ATTRIBUTE_UNUSED = 
      kfmin(ToReal(1),kexp(knmsub(rL,ToReal(ScalarINV(SpatialShiftGammaCoeffRadius)),ToReal(1))));
    
    CCTK_REAL Ddetgt1 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(gtu11,JacPDstandardNth1gt11,kmadd(gtu22,JacPDstandardNth1gt22,kmadd(gtu33,JacPDstandardNth1gt33,kmadd(gtu12,kmul(JacPDstandardNth1gt12,ToReal(2)),kmadd(gtu13,kmul(JacPDstandardNth1gt13,ToReal(2)),kmul(gtu23,kmul(JacPDstandardNth1gt23,ToReal(2))))))));
    
    CCTK_REAL Ddetgt2 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(gtu11,JacPDstandardNth2gt11,kmadd(gtu22,JacPDstandardNth2gt22,kmadd(gtu33,JacPDstandardNth2gt33,kmadd(gtu12,kmul(JacPDstandardNth2gt12,ToReal(2)),kmadd(gtu13,kmul(JacPDstandardNth2gt13,ToReal(2)),kmul(gtu23,kmul(JacPDstandardNth2gt23,ToReal(2))))))));
    
    CCTK_REAL Ddetgt3 CCTK_ATTRIBUTE_UNUSED = 
      kmadd(gtu11,JacPDstandardNth3gt11,kmadd(gtu22,JacPDstandardNth3gt22,kmadd(gtu33,JacPDstandardNth3gt33,kmadd(gtu12,kmul(JacPDstandardNth3gt12,ToReal(2)),kmadd(gtu13,kmul(JacPDstandardNth3gt13,ToReal(2)),kmul(gtu23,kmul(JacPDstandardNth3gt23,ToReal(2))))))));
    
    CCTK_REAL beta1rhsL CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL beta2rhsL CCTK_ATTRIBUTE_UNUSED;
    CCTK_REAL beta3rhsL CCTK_ATTRIBUTE_UNUSED;
    
    if (harmonicShift)
    {
      beta1rhsL = 
        kmul(alphaL,kmul(em4phi,kmul(ToReal(-0.5),kmadd(gtu11,kmadd(alphaL,kmul(JacPDstandardNth1phi,kmul(IfThen(conformalMethod 
        == 
        1,kdiv(ToReal(1),phiL),ToReal(-2)),ToReal(-2))),kmadd(alphaL,kmadd(kmadd(gtu11,JacPDstandardNth1gt11,kmadd(gtu12,JacPDstandardNth1gt12,kmadd(gtu13,JacPDstandardNth1gt13,kmadd(gtu12,JacPDstandardNth2gt11,kmadd(gtu22,JacPDstandardNth2gt12,kmadd(gtu23,JacPDstandardNth2gt13,kmadd(gtu13,JacPDstandardNth3gt11,kmadd(gtu23,JacPDstandardNth3gt12,kmul(gtu33,JacPDstandardNth3gt13))))))))),ToReal(-2),Ddetgt1),kmul(JacPDstandardNth1alpha,ToReal(2)))),kmadd(gtu12,kmadd(alphaL,kmul(JacPDstandardNth2phi,kmul(IfThen(conformalMethod 
        == 
        1,kdiv(ToReal(1),phiL),ToReal(-2)),ToReal(-2))),kmadd(alphaL,kmadd(kmadd(gtu11,JacPDstandardNth1gt12,kmadd(gtu12,JacPDstandardNth1gt22,kmadd(gtu13,JacPDstandardNth1gt23,kmadd(gtu12,JacPDstandardNth2gt12,kmadd(gtu22,JacPDstandardNth2gt22,kmadd(gtu23,JacPDstandardNth2gt23,kmadd(gtu13,JacPDstandardNth3gt12,kmadd(gtu23,JacPDstandardNth3gt22,kmul(gtu33,JacPDstandardNth3gt23))))))))),ToReal(-2),Ddetgt2),kmul(JacPDstandardNth2alpha,ToReal(2)))),kmul(gtu13,kmadd(alphaL,kmul(JacPDstandardNth3phi,kmul(IfThen(conformalMethod 
        == 
        1,kdiv(ToReal(1),phiL),ToReal(-2)),ToReal(-2))),kmadd(alphaL,kmadd(kmadd(gtu11,JacPDstandardNth1gt13,kmadd(gtu12,JacPDstandardNth1gt23,kmadd(gtu13,JacPDstandardNth1gt33,kmadd(gtu12,JacPDstandardNth2gt13,kmadd(gtu22,JacPDstandardNth2gt23,kmadd(gtu23,JacPDstandardNth2gt33,kmadd(gtu13,JacPDstandardNth3gt13,kmadd(gtu23,JacPDstandardNth3gt23,kmul(gtu33,JacPDstandardNth3gt33))))))))),ToReal(-2),Ddetgt3),kmul(JacPDstandardNth3alpha,ToReal(2))))))))));
      
      beta2rhsL = 
        kmul(alphaL,kmul(em4phi,kmul(ToReal(-0.5),kmadd(gtu12,kmadd(alphaL,kmul(JacPDstandardNth1phi,kmul(IfThen(conformalMethod 
        == 
        1,kdiv(ToReal(1),phiL),ToReal(-2)),ToReal(-2))),kmadd(alphaL,kmadd(kmadd(gtu11,JacPDstandardNth1gt11,kmadd(gtu12,JacPDstandardNth1gt12,kmadd(gtu13,JacPDstandardNth1gt13,kmadd(gtu12,JacPDstandardNth2gt11,kmadd(gtu22,JacPDstandardNth2gt12,kmadd(gtu23,JacPDstandardNth2gt13,kmadd(gtu13,JacPDstandardNth3gt11,kmadd(gtu23,JacPDstandardNth3gt12,kmul(gtu33,JacPDstandardNth3gt13))))))))),ToReal(-2),Ddetgt1),kmul(JacPDstandardNth1alpha,ToReal(2)))),kmadd(gtu22,kmadd(alphaL,kmul(JacPDstandardNth2phi,kmul(IfThen(conformalMethod 
        == 
        1,kdiv(ToReal(1),phiL),ToReal(-2)),ToReal(-2))),kmadd(alphaL,kmadd(kmadd(gtu11,JacPDstandardNth1gt12,kmadd(gtu12,JacPDstandardNth1gt22,kmadd(gtu13,JacPDstandardNth1gt23,kmadd(gtu12,JacPDstandardNth2gt12,kmadd(gtu22,JacPDstandardNth2gt22,kmadd(gtu23,JacPDstandardNth2gt23,kmadd(gtu13,JacPDstandardNth3gt12,kmadd(gtu23,JacPDstandardNth3gt22,kmul(gtu33,JacPDstandardNth3gt23))))))))),ToReal(-2),Ddetgt2),kmul(JacPDstandardNth2alpha,ToReal(2)))),kmul(gtu23,kmadd(alphaL,kmul(JacPDstandardNth3phi,kmul(IfThen(conformalMethod 
        == 
        1,kdiv(ToReal(1),phiL),ToReal(-2)),ToReal(-2))),kmadd(alphaL,kmadd(kmadd(gtu11,JacPDstandardNth1gt13,kmadd(gtu12,JacPDstandardNth1gt23,kmadd(gtu13,JacPDstandardNth1gt33,kmadd(gtu12,JacPDstandardNth2gt13,kmadd(gtu22,JacPDstandardNth2gt23,kmadd(gtu23,JacPDstandardNth2gt33,kmadd(gtu13,JacPDstandardNth3gt13,kmadd(gtu23,JacPDstandardNth3gt23,kmul(gtu33,JacPDstandardNth3gt33))))))))),ToReal(-2),Ddetgt3),kmul(JacPDstandardNth3alpha,ToReal(2))))))))));
      
      beta3rhsL = 
        kmul(alphaL,kmul(em4phi,kmul(ToReal(-0.5),kmadd(gtu13,kmadd(alphaL,kmul(JacPDstandardNth1phi,kmul(IfThen(conformalMethod 
        == 
        1,kdiv(ToReal(1),phiL),ToReal(-2)),ToReal(-2))),kmadd(alphaL,kmadd(kmadd(gtu11,JacPDstandardNth1gt11,kmadd(gtu12,JacPDstandardNth1gt12,kmadd(gtu13,JacPDstandardNth1gt13,kmadd(gtu12,JacPDstandardNth2gt11,kmadd(gtu22,JacPDstandardNth2gt12,kmadd(gtu23,JacPDstandardNth2gt13,kmadd(gtu13,JacPDstandardNth3gt11,kmadd(gtu23,JacPDstandardNth3gt12,kmul(gtu33,JacPDstandardNth3gt13))))))))),ToReal(-2),Ddetgt1),kmul(JacPDstandardNth1alpha,ToReal(2)))),kmadd(gtu23,kmadd(alphaL,kmul(JacPDstandardNth2phi,kmul(IfThen(conformalMethod 
        == 
        1,kdiv(ToReal(1),phiL),ToReal(-2)),ToReal(-2))),kmadd(alphaL,kmadd(kmadd(gtu11,JacPDstandardNth1gt12,kmadd(gtu12,JacPDstandardNth1gt22,kmadd(gtu13,JacPDstandardNth1gt23,kmadd(gtu12,JacPDstandardNth2gt12,kmadd(gtu22,JacPDstandardNth2gt22,kmadd(gtu23,JacPDstandardNth2gt23,kmadd(gtu13,JacPDstandardNth3gt12,kmadd(gtu23,JacPDstandardNth3gt22,kmul(gtu33,JacPDstandardNth3gt23))))))))),ToReal(-2),Ddetgt2),kmul(JacPDstandardNth2alpha,ToReal(2)))),kmul(gtu33,kmadd(alphaL,kmul(JacPDstandardNth3phi,kmul(IfThen(conformalMethod 
        == 
        1,kdiv(ToReal(1),phiL),ToReal(-2)),ToReal(-2))),kmadd(alphaL,kmadd(kmadd(gtu11,JacPDstandardNth1gt13,kmadd(gtu12,JacPDstandardNth1gt23,kmadd(gtu13,JacPDstandardNth1gt33,kmadd(gtu12,JacPDstandardNth2gt13,kmadd(gtu22,JacPDstandardNth2gt23,kmadd(gtu23,JacPDstandardNth2gt33,kmadd(gtu13,JacPDstandardNth3gt13,kmadd(gtu23,JacPDstandardNth3gt23,kmul(gtu33,JacPDstandardNth3gt33))))))))),ToReal(-2),Ddetgt3),kmul(JacPDstandardNth3alpha,ToReal(2))))))))));
    }
    else
    {
      beta1rhsL = 
        kmul(theta,kmul(kmadd(B1L,ToReal(ShiftBCoeff),kmul(knmsub(beta1L,kmul(eta,ToReal(BetaDriver)),Xt1L),ToReal(1 
        - ShiftBCoeff))),ToReal(ShiftGammaCoeff)));
      
      beta2rhsL = 
        kmul(theta,kmul(kmadd(B2L,ToReal(ShiftBCoeff),kmul(knmsub(beta2L,kmul(eta,ToReal(BetaDriver)),Xt2L),ToReal(1 
        - ShiftBCoeff))),ToReal(ShiftGammaCoeff)));
      
      beta3rhsL = 
        kmul(theta,kmul(kmadd(B3L,ToReal(ShiftBCoeff),kmul(knmsub(beta3L,kmul(eta,ToReal(BetaDriver)),Xt3L),ToReal(1 
        - ShiftBCoeff))),ToReal(ShiftGammaCoeff)));
    }
    
    CCTK_REAL B1rhsL CCTK_ATTRIBUTE_UNUSED = 
      kmul(knmsub(B1L,kmul(eta,ToReal(BetaDriver)),dotXt1),ToReal(ShiftBCoeff));
    
    CCTK_REAL B2rhsL CCTK_ATTRIBUTE_UNUSED = 
      kmul(knmsub(B2L,kmul(eta,ToReal(BetaDriver)),dotXt2),ToReal(ShiftBCoeff));
    
    CCTK_REAL B3rhsL CCTK_ATTRIBUTE_UNUSED = 
      kmul(knmsub(B3L,kmul(eta,ToReal(BetaDriver)),dotXt3),ToReal(ShiftBCoeff));
    /* Copy local copies back to grid functions */
    vec_store_partial_prepare(i,vecimin,vecimax);
    vec_store_nta_partial(I3D(alpharhs,0,0,0),alpharhsL);
    vec_store_nta_partial(I3D(Arhs,0,0,0),ArhsL);
    vec_store_nta_partial(I3D(B1rhs,0,0,0),B1rhsL);
    vec_store_nta_partial(I3D(B2rhs,0,0,0),B2rhsL);
    vec_store_nta_partial(I3D(B3rhs,0,0,0),B3rhsL);
    vec_store_nta_partial(I3D(beta1rhs,0,0,0),beta1rhsL);
    vec_store_nta_partial(I3D(beta2rhs,0,0,0),beta2rhsL);
    vec_store_nta_partial(I3D(beta3rhs,0,0,0),beta3rhsL);
    vec_store_nta_partial(I3D(gt11rhs,0,0,0),gt11rhsL);
    vec_store_nta_partial(I3D(gt12rhs,0,0,0),gt12rhsL);
    vec_store_nta_partial(I3D(gt13rhs,0,0,0),gt13rhsL);
    vec_store_nta_partial(I3D(gt22rhs,0,0,0),gt22rhsL);
    vec_store_nta_partial(I3D(gt23rhs,0,0,0),gt23rhsL);
    vec_store_nta_partial(I3D(gt33rhs,0,0,0),gt33rhsL);
    vec_store_nta_partial(I3D(phirhs,0,0,0),phirhsL);
    vec_store_nta_partial(I3D(trKrhs,0,0,0),trKrhsL);
    vec_store_nta_partial(I3D(Xt1rhs,0,0,0),Xt1rhsL);
    vec_store_nta_partial(I3D(Xt2rhs,0,0,0),Xt2rhsL);
    vec_store_nta_partial(I3D(Xt3rhs,0,0,0),Xt3rhsL);
    
  CAKERNEL_ML_BSSN_CaKernel_RHS1_Computations_End
  
CAKERNEL_ML_BSSN_CaKernel_RHS1_End
